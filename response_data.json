[{"id": "1356641692863111173", "author_id": "136300886", "author_handle": "alegalviz", "created_at": 1612305159.0, "favorite_count": 0, "full_text": "@JnBrymn I think it would be helpful to search something selecting different branches on a repo. I just needed that in a unmerged feature branch."}, {"id": "1356547696635637761", "author_id": "25075954", "author_handle": "sebastianberns", "created_at": 1612282748.0, "favorite_count": 0, "full_text": "@JnBrymn If I switch to a branch other than master and then do a search in the repository I would expect that search to be done on the branch. At the moment it defaults to the master branch."}, {"id": "1356466463050203142", "author_id": "905120213288583168", "author_handle": "SmithWebDev", "created_at": 1612263381.0, "favorite_count": 0, "full_text": "@JnBrymn @lancodes_ Is there a way when search for a repository that the first option is not set to the current code base but all of github. Especially when recognizing the {username}/{https://t.co/JU9cQon6te} format in the search..."}, {"id": "1356429870050340864", "author_id": "6656702", "author_handle": "rajington", "created_at": 1612254656.0, "favorite_count": 0, "full_text": "@JnBrymn complete AST search engine, with a nice UI or advanced syntax for things like \"like: `const foo = 2`\" would rank the relevancy of results like `let bar=3;`"}, {"id": "1356304603734663169", "author_id": "2254028833", "author_handle": "seattlesmith1", "created_at": 1612224791.0, "favorite_count": 0, "full_text": "@JnBrymn It would be great to have a way to search within specific branches"}, {"id": "1356299875059523586", "author_id": "709347576", "author_handle": "sheriffworf", "created_at": 1612223663.0, "favorite_count": 0, "full_text": "@JnBrymn searching within specific branches"}, {"id": "1356291016865800195", "author_id": "14047889", "author_handle": "labria", "created_at": 1612221551.0, "favorite_count": 0, "full_text": "@JnBrymn Please, when I search for a word, give me links to the master branch, not to a weird blob somewhere in history! Thanks!"}, {"id": "1356267880296415232", "author_id": "5610512", "author_handle": "itsdrewmiller", "created_at": 1612216035.0, "favorite_count": 0, "full_text": "@JnBrymn (optional) exact string matching - that's the #1 reason I need to actually put the code on disk these days."}, {"id": "1356249218403487746", "author_id": "278963041", "author_handle": "tomsansome", "created_at": 1612211586.0, "favorite_count": 0, "full_text": "@JnBrymn Sorry if this has been said: being able to search within a specific directory of a repo, not just entire repo \ud83d\udc4d"}, {"id": "1356226304509546498", "author_id": "862126610673266688", "author_handle": "VishalGopalNaik", "created_at": 1612206123.0, "favorite_count": 0, "full_text": "@JnBrymn Filters to search\ud83d\ude05"}, {"id": "1356217307886829576", "author_id": "1048457016111316992", "author_handle": "vulnerablecode", "created_at": 1612203978.0, "favorite_count": 0, "full_text": "@JnBrymn Raising the github api threshold so we can find secrets in real time would be awesome."}, {"id": "1356203291181506560", "author_id": "90369035", "author_handle": "karlzinom", "created_at": 1612200636.0, "favorite_count": 0, "full_text": "@JnBrymn I don't use GitHub, since it is a sellout. \ud83e\udd37\ud83c\udffb\u200d\u2640\ufe0f\nDevelopers should move on to #gitlab. Fuck Microsoft."}, {"id": "1356110640696479748", "author_id": "43605349", "author_handle": "HandNF", "created_at": 1612178546.0, "favorite_count": 0, "full_text": "@JnBrymn The priority of things should be shifted. Looking up a specific phrase should ideally give the definition first ahead of its usage. Next, more internal uses would be important to see how it may be used. Tests are nice, but I'd put them last."}, {"id": "1356100206652256258", "author_id": "666043", "author_handle": "danielpunkass", "created_at": 1612176059.0, "favorite_count": 1, "full_text": "@JnBrymn @DaveHamilton Identify search results that are likely to be in unit tests and score them lower than results that are likely to be in product code."}, {"id": "1356057851442114560", "author_id": "23279209", "author_handle": "RoseAJacob", "created_at": 1612165960.0, "favorite_count": 0, "full_text": "@JnBrymn Cant overstate how valuable a \"similar repositories to this one\" search/browse experience would be for GitHub's code discovery capabilities"}, {"id": "1356038729513672704", "author_id": "1255888659338813441", "author_handle": "alextrauzzi", "created_at": 1612161401.0, "favorite_count": 0, "full_text": "@JnBrymn Search non default branches. Better matching for common characters in code like braces, parenthesis, etc. Even if only when in quotes.\n\nLess forgiving fuzzy matching."}, {"id": "1356036503118503937", "author_id": "988470429366054912", "author_handle": "OrmondCodeNinja", "created_at": 1612160870.0, "favorite_count": 0, "full_text": "@JnBrymn @TruBluDevil Think it would be great to see a top 100 most searched terms or phrases so the open source community might know what\u2019s trending high demand right now and can meet those needs.\n\nOtherwise, it\u2019s been meeting my needs pretty good. Thanks for asking!"}, {"id": "1356031457777516549", "author_id": "572380501", "author_handle": "genzerhawker", "created_at": 1612159668.0, "favorite_count": 0, "full_text": "@JnBrymn Search on a specific branch?"}, {"id": "1356026418904268800", "author_id": "1016272942395559937", "author_handle": "IgorRussKie", "created_at": 1612158466.0, "favorite_count": 0, "full_text": "@JnBrymn I want to have a consistent search behaviors across the whole site. Right now it isn't. I can't recall specifics but parts of the site have different behaviours, and feel like employ different DSLs."}, {"id": "1356025941638533127", "author_id": "1016272942395559937", "author_handle": "IgorRussKie", "created_at": 1612158352.0, "favorite_count": 1, "full_text": "@JnBrymn I want to be able express search filters as AND, OR, NOT, and a combination of those."}, {"id": "1356025533063024640", "author_id": "1016272942395559937", "author_handle": "IgorRussKie", "created_at": 1612158255.0, "favorite_count": 1, "full_text": "@JnBrymn When I search for a method 99.99% of time I want the actual method definition, and I don't want to scroll through 74 pages looking for its definition."}, {"id": "1356017054134849541", "author_id": "15794866", "author_handle": "jayofdoom", "created_at": 1612156233.0, "favorite_count": 0, "full_text": "@JnBrymn Only being able to search against the default branch is brutal."}, {"id": "1356015299317952512", "author_id": "239573893", "author_handle": "ObsidianDev", "created_at": 1612155815.0, "favorite_count": 0, "full_text": "@JnBrymn I\u2019ve searched for files by a specific file name, or searched for *.kts (eg) files, and for a@ton of shite responses. Just make it capable of returning ONLY what I\u2019m actually searching for. And being able to search file names."}, {"id": "1356008604256632834", "author_id": "367921040", "author_handle": "mr_hid3", "created_at": 1612154219.0, "favorite_count": 0, "full_text": "@JnBrymn Make a \"For Dummies\" section."}, {"id": "1356004643319525384", "author_id": "634252228", "author_handle": "Rubberduck203", "created_at": 1612153274.0, "favorite_count": 3, "full_text": "@JnBrymn If a file name matches, put that at the top of the list. \n\nThe other one, I understand how hard what I\u2019m asking for is. Some syntax awareness. If my search matches a class name, that\u2019s what I want to see first, not it\u2019s 500 usages."}, {"id": "1356004567327125510", "author_id": "70739313", "author_handle": "tim_rijckaert", "created_at": 1612153256.0, "favorite_count": 1, "full_text": "@JnBrymn Collapse duplicate code. \nCollapsible forks \n\nQuick view. Now I need to click every result in a different tab."}, {"id": "1356003159282479104", "author_id": "49584881", "author_handle": "jchannon", "created_at": 1612152921.0, "favorite_count": 2, "full_text": "@JnBrymn Search within a specific branch"}, {"id": "1356002353023836160", "author_id": "1042278086820028417", "author_handle": "aVerySpicyBoi", "created_at": 1612152728.0, "favorite_count": 3, "full_text": "@JnBrymn An easy way to exclude forks. For a popular library project you can't use search to find real-world usage of your library in practice because the results will overwhelmingly be forks of your repo."}, {"id": "1356000237643395073", "author_id": "509791860", "author_handle": "davkean", "created_at": 1612152224.0, "favorite_count": 2, "full_text": "@JnBrymn Please remove the filter that hides everything under a \"build\" folder. This is annoying for repos other than JavaScript and is why I fallback to other search mechanisms."}, {"id": "1355996099438391296", "author_id": "47288696", "author_handle": "__TheBaron__", "created_at": 1612151237.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll 4) I would like a literal direct text search.  If I search for \u201c}.    ;\u201d. I would like exact matches with those four spaces."}, {"id": "1355995664585551873", "author_id": "47288696", "author_handle": "__TheBaron__", "created_at": 1612151134.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll 1) Allow me to search for non word things.  \n\n2) Treat punctuation as actually relevant to the search.  \n\n3) Allow searching branches other than the main branch."}, {"id": "1355994417421836291", "author_id": "18283695", "author_handle": "timb_machine", "created_at": 1612150836.0, "favorite_count": 0, "full_text": "@JnBrymn @KhatibSajjad Had a look at https://t.co/tWGjM2yW7Q? DCS is my go to for open source searches if they have it."}, {"id": "1355993813924376585", "author_id": "1004620464", "author_handle": "LStranck", "created_at": 1612150693.0, "favorite_count": 0, "full_text": "@JnBrymn Regex search?"}, {"id": "1355993680792924160", "author_id": "78312009", "author_handle": "jakub_pomykala", "created_at": 1612150661.0, "favorite_count": 0, "full_text": "@JnBrymn Everything is perfect! Thanks!"}, {"id": "1355992852182888449", "author_id": "824301", "author_handle": "TFox", "created_at": 1612150463.0, "favorite_count": 0, "full_text": "@JnBrymn Tabbed results for \"repo\" \"user\" \"global\" rather than preselect/default \"repo\" only. I almost always have to search twice."}, {"id": "1355991125086138377", "author_id": "37889249", "author_handle": "gradecak", "created_at": 1612150051.0, "favorite_count": 0, "full_text": "@JnBrymn Maybe searching on a  specific branch could be useful, personnaly I needed it a couple of times"}, {"id": "1355989195827929088", "author_id": "426466470", "author_handle": "idelvall", "created_at": 1612149592.0, "favorite_count": 1, "full_text": "@JnBrymn I've always missed looking for an exact phrase, something like using the quotes in a google search"}, {"id": "1355983231183687682", "author_id": "273075592", "author_handle": "BiancoDario", "created_at": 1612148169.0, "favorite_count": 0, "full_text": "@JnBrymn Do you support Boolean search queries?"}, {"id": "1355979602615652352", "author_id": "14295858", "author_handle": "omry", "created_at": 1612147304.0, "favorite_count": 0, "full_text": "@JnBrymn Code search have improved a lot in the past year, good job.\nIt kept timing out on trivial searches.\nOne thing I am missing is literal search. (find-this-as-is search).\nExample search I would like to use on all of GitHub:\nhttps://t.co/LxgNWqwEER"}, {"id": "1355976057330003968", "author_id": "1308891409", "author_handle": "carrchr", "created_at": 1612146459.0, "favorite_count": 0, "full_text": "@JnBrymn Perhaps it already does this and I\u2019m ignorant but searching for files by branch/tag"}, {"id": "1355975834339782660", "author_id": "3028540053", "author_handle": "MiamiJorgeCodes", "created_at": 1612146406.0, "favorite_count": 0, "full_text": "@JnBrymn Search across branches.\n\nLong story short, sometimes I know a method but don\u2019t know which branch it\u2019s on so that I can look at the implementation."}, {"id": "1355974348264386561", "author_id": "185553", "author_handle": "medikoo", "created_at": 1612146052.0, "favorite_count": 0, "full_text": "@JnBrymn @neptune_ai Search strings literally (also case sensitive) as they've put in unit box.\n\nAFAIK now there's no way, (quoting input doesn't work)"}, {"id": "1355967859751436290", "author_id": "50136899", "author_handle": "tannerlinsley", "created_at": 1612144505.0, "favorite_count": 2, "full_text": "@JnBrymn @sseraphini Allow me to optionally search all branches and/or history. Give me modifiers to specify \u201cspecific, exact phrases\u201d etc, much like google or twitters search box."}, {"id": "1355966392512770048", "author_id": "2654920954", "author_handle": "jonesmatt1957", "created_at": 1612144155.0, "favorite_count": 0, "full_text": "@JnBrymn @ewbarnard What's GitHub?"}, {"id": "1355964931414233090", "author_id": "110224495", "author_handle": "cvanw", "created_at": 1612143806.0, "favorite_count": 1, "full_text": "@JnBrymn #1: Being able to group by codebase similarity or exclude forks. (Often folks copy, not fork, the same code samples and portions of repos.)\n#2: Search for substring matches in multiple files.\n#3: Better control over fuzzy search. Opt out and allow stricter, regexes?"}, {"id": "1355964660000821249", "author_id": "367864062", "author_handle": "ronald_petty", "created_at": 1612143742.0, "favorite_count": 0, "full_text": "@JnBrymn Searching will never replace clicking and drilling down to find references or declarations.  My opinion though.   Search can be better if back/forward didn\u2019t depend on browser navigation."}, {"id": "1355961028866158592", "author_id": "21325333", "author_handle": "jbook3r", "created_at": 1612142876.0, "favorite_count": 0, "full_text": "@JnBrymn Does file name searching work yet? I know I have a file called \u2018util.css\u2019 buried in the tree somewhere. Typing that name in the search box should take me straight to it."}, {"id": "1355960383396147200", "author_id": "2160299628", "author_handle": "PCacioppi", "created_at": 1612142722.0, "favorite_count": 0, "full_text": "@JnBrymn I have no suggestions. I'm just here to tell you how much I love GitHub and how profoundly it has improved my quality of life. GitHub or GTFO."}, {"id": "1355958895701880832", "author_id": "360745460", "author_handle": "PowersBenny", "created_at": 1612142367.0, "favorite_count": 0, "full_text": "@JnBrymn Call signatures\nReferences\nImplementations"}, {"id": "1355958781218197505", "author_id": "324417909", "author_handle": "ShivDhar", "created_at": 1612142340.0, "favorite_count": 0, "full_text": "@JnBrymn Regex + ast-enabled search (e.g. searching for a function named \"defined\" shouldn't return all \"def\"s in a python project)"}, {"id": "1355956628772814849", "author_id": "3040562079", "author_handle": "frederikf_", "created_at": 1612141827.0, "favorite_count": 0, "full_text": "@JnBrymn much better sorting options - often needed \"oldest first\", \"sort by occurrences\", \"sort by number of references\", but a lot more possibilities here.\n\nAlso clustering of content which is exact/almost the same, right now gives you endless pages of the same file."}, {"id": "1355955161500246018", "author_id": "10187462", "author_handle": "cortfritz", "created_at": 1612141477.0, "favorite_count": 0, "full_text": "@JnBrymn augment existing search a new type of pattern match expression maybe with back quotes as the bracket / indicator.  something like `{*{SomeObjectReference.functionName` As you typed you get typeahead/intellisense feedback for actual matches."}, {"id": "1355954859820810240", "author_id": "21638527", "author_handle": "JonathonMarolf", "created_at": 1612141405.0, "favorite_count": 0, "full_text": "@JnBrymn compare this search: https://t.co/Ry8dgmBQv7 to this search https://t.co/O5iTikifkr in the same repo. Even though github search returns the same files in the same order it picks some random spot in the file to show me. meaning I have no idea if its what I want of not."}, {"id": "1355954527007088648", "author_id": "125671790", "author_handle": "Tricertops", "created_at": 1612141326.0, "favorite_count": 0, "full_text": "@JnBrymn Last time I tried it couldn\u2019t search file names in the current repo."}, {"id": "1355951981307834368", "author_id": "16518416", "author_handle": "oocx", "created_at": 1612140719.0, "favorite_count": 0, "full_text": "@JnBrymn Sometimes I'd like to find the location where a type or method is defined. When I just search for the name, I also get all the locations where it is used, which sometimes can be a really long list."}, {"id": "1355949294394683393", "author_id": "143455047", "author_handle": "jameswestgate", "created_at": 1612140078.0, "favorite_count": 0, "full_text": "@JnBrymn I tried to search for a literal using quotations in my code and the search couldn\u2019t handle it. The ui and tokenisation of search terms vs verbatim literal search needs some love"}, {"id": "1355948353033388033", "author_id": "1014546278863142912", "author_handle": "datjiveavocado", "created_at": 1612139854.0, "favorite_count": 0, "full_text": "@JnBrymn I love the PR diff view. I wish I could view my commute in this same way."}, {"id": "1355947380978245632", "author_id": "2150118962", "author_handle": "BondParkerBond", "created_at": 1612139622.0, "favorite_count": 0, "full_text": "@JnBrymn Be able to search for \"import foo\" and have it match default AND named exports without needing to add some special regex to match \"import { bar, foo, baz } from...\u201d"}, {"id": "1355946139304996864", "author_id": "1041076799386648576", "author_handle": "SMT_Solvers", "created_at": 1612139326.0, "favorite_count": 0, "full_text": "@JnBrymn @maxbrunsfeld Clang AST search."}, {"id": "1355939546718855170", "author_id": "171191579", "author_handle": "suyashcjoshi", "created_at": 1612137754.0, "favorite_count": 0, "full_text": "@JnBrymn advance search options besides keyword search"}, {"id": "1355939461805162497", "author_id": "22964397", "author_handle": "groogs", "created_at": 1612137734.0, "favorite_count": 6, "full_text": "@JnBrymn @daveaglick Semantic-aware? 90% of the time I search for something I'm looking for the function/class/property definition, but it usually ends up being on one of the last pages of results."}, {"id": "1355935972832079872", "author_id": "448276023", "author_handle": "maximusalee", "created_at": 1612136902.0, "favorite_count": 0, "full_text": "@JnBrymn Filter based on programming language"}, {"id": "1355935766677913600", "author_id": "2723911694", "author_handle": "thvasilo", "created_at": 1612136853.0, "favorite_count": 1, "full_text": "@JnBrymn Long shot but a way to rank definitions higher than usages. When I search for a function name I want to see what it does not where it's used."}, {"id": "1355934021419728897", "author_id": "768893389", "author_handle": "PammerSiegfried", "created_at": 1612136437.0, "favorite_count": 0, "full_text": "@JnBrymn As others have mentioned, exact match would be really nice,  not only in code search, but also when searching issues. Also, currently it is impossible to search for expressions that contain non-alphanumeric characters, such as == or !=. Haven't found a way to escape these yet."}, {"id": "1355933240654254080", "author_id": "951619891982979073", "author_handle": "rmcomplexity", "created_at": 1612136251.0, "favorite_count": 1, "full_text": "@JnBrymn Make it work like grep.\n\nWe are already familiar with grep and some languages are meant to be greap-able.\n\nFor instance, in python you k ow that \"var_name=\" means something different than \"var_name =\""}, {"id": "1355931770462547968", "author_id": "233527250", "author_handle": "Schwad4HD14", "created_at": 1612135900.0, "favorite_count": 1, "full_text": "@JnBrymn Exact matching! I\u2019d love to sort matches by the exact bizarre snippet I\u2019m searching (if they exist)\n\nI.e, \u201csome_bizarre(code: :exactly)\u201d"}, {"id": "1355930542458380290", "author_id": "217607250", "author_handle": "_crossdiver", "created_at": 1612135607.0, "favorite_count": 0, "full_text": "@JnBrymn Being able to search on a particular branch!"}, {"id": "1355929814465617920", "author_id": "18388036", "author_handle": "KirillOsenkov", "created_at": 1612135434.0, "favorite_count": 6, "full_text": "@JnBrymn have you seen https://t.co/qxZH9gt6Ov? semantic search would be nice"}, {"id": "1355928603528192003", "author_id": "43988037", "author_handle": "Corlaez", "created_at": 1612135145.0, "favorite_count": 1, "full_text": "@JnBrymn Make it work literally like vscode or IntelliJ full text search works in local.\nPick which commit/branch to search on."}, {"id": "1355928333511438336", "author_id": "20732572", "author_handle": "giovannibassi", "created_at": 1612135081.0, "favorite_count": 4, "full_text": "@JnBrymn \"Quoted search\" does not work IIRC.\nIt would be time saving."}, {"id": "1355926129715146752", "author_id": "19316113", "author_handle": "bvhme", "created_at": 1612134555.0, "favorite_count": 0, "full_text": "@JnBrymn I'd like to be able to search for multiline strings in files with specific names. To make it easier to find specific projects based on metadata in files like https://t.co/pJjT4nhe55"}, {"id": "1355924690401980419", "author_id": "59191363", "author_handle": "LucasBFronza", "created_at": 1612134212.0, "favorite_count": 1, "full_text": "@JnBrymn @sseraphini Being able to use regex patterns (am I asking too much? \ud83d\ude02). And be able to search by dots, something like: \"some.nested.variable\". IIRC, tt the moment this would search for \"some\", \"nested\" and \"variable\"."}, {"id": "1355923702039400451", "author_id": "771306493144543233", "author_handle": "irisapoy", "created_at": 1612133977.0, "favorite_count": 1, "full_text": "@JnBrymn Priority: Definition search results (&gt; declaration search results) &gt; documentation search results\nAlthough this order is personal, it would be great to have option to rank them our own ways"}, {"id": "1355921119010672644", "author_id": "16001008", "author_handle": "Ptival", "created_at": 1612133361.0, "favorite_count": 0, "full_text": "@JnBrymn Code search in a given branch?\n\nUnless I'm too stupid to find the option, in which case make it easier to find!"}, {"id": "1355918778526269443", "author_id": "1071586316566056960", "author_handle": "thefinaldownco", "created_at": 1612132803.0, "favorite_count": 1, "full_text": "@JnBrymn Can you do what ProgrammerCreek is doing?  https://t.co/PNZhIa6JJX"}, {"id": "1355916115138908162", "author_id": "399370021", "author_handle": "iamjkeating", "created_at": 1612132168.0, "favorite_count": 0, "full_text": "@JnBrymn When I search and find code results I'm constantly switching the branch selector back to the main branch to share a link. I wish results weren't always a specific commit hash."}, {"id": "1355915150952304640", "author_id": "3308888424", "author_handle": "_cartermp", "created_at": 1612131938.0, "favorite_count": 10, "full_text": "@JnBrymn @JonathonMarolf Results in my repo - dotnet/fsharp seem to heavily favor test files over implementation files. It\u2019s almost never what I\u2019m actually looking for. All test files are under /test folders"}, {"id": "1355913635290378243", "author_id": "562612875", "author_handle": "PavelPatino", "created_at": 1612131576.0, "favorite_count": 0, "full_text": "@JnBrymn Search within non-default branches. I want this all the time!"}, {"id": "1355912938578558978", "author_id": "32717950", "author_handle": "JoseBrowneX", "created_at": 1612131410.0, "favorite_count": 0, "full_text": "@JnBrymn To be able to use some special characters in my query. For example \u201c/some-path\u201d. Today the \u201c/\u201c is ignored \ud83d\ude14"}, {"id": "1355912599494340611", "author_id": "1603913161", "author_handle": "pfcoperez", "created_at": 1612131330.0, "favorite_count": 0, "full_text": "@JnBrymn Allow filtering results for a specific branch / commit / tag."}, {"id": "1355911951084212224", "author_id": "275654829", "author_handle": "RachunZero", "created_at": 1612131175.0, "favorite_count": 0, "full_text": "@JnBrymn The same capabilities we see in intellij - search for uses of a method or implementations of an interface."}, {"id": "1355911542424936449", "author_id": "3818", "author_handle": "neiled", "created_at": 1612131077.0, "favorite_count": 0, "full_text": "@JnBrymn I can\u2019t seem to search my own repos. Does it ignore private ones I own?"}, {"id": "1355911399642456065", "author_id": "30318720", "author_handle": "pniedri", "created_at": 1612131043.0, "favorite_count": 0, "full_text": "@JnBrymn Let me search strings for API routes in code repos (ex: /query/items) so I can find if/where that API route is actually being called by other services (I needed this last week to switch item validation from an old service to a new one in all our backend micro services)"}, {"id": "1355910554184015875", "author_id": "16004473", "author_handle": "oliveremberton", "created_at": 1612130842.0, "favorite_count": 0, "full_text": "@JnBrymn Search should match by filename. That\u2019s my #1 case and I end up having to search for something inside the file, if I can remember it."}, {"id": "1355910460969779200", "author_id": "2976832763", "author_handle": "issotm", "created_at": 1612130820.0, "favorite_count": 1, "full_text": "@JnBrymn Acknowledging special characters. In the language I work with, variables are defined by `name::`, but since GitHub trims the colons off, I get 5 pages of refs to that var and one definition.\nIt's worse when the definition is e.g. the third match in a file, as it is in no preview."}, {"id": "1355910031313686531", "author_id": "54851200", "author_handle": "akifhno", "created_at": 1612130717.0, "favorite_count": 0, "full_text": "@JnBrymn * Being able to search branches other than the default one.\n* Searching exact matches including special chars.\n* Filtering out duplicate files among different repos."}, {"id": "1355906432177041410", "author_id": "8092322", "author_handle": "dvdsgl", "created_at": 1612129859.0, "favorite_count": 0, "full_text": "@JnBrymn Searching the current repo should feel like searching in @code."}, {"id": "1355904722838966274", "author_id": "29961025", "author_handle": "_jayphelps", "created_at": 1612129452.0, "favorite_count": 5, "full_text": "@JnBrymn Searching non-primary branches."}, {"id": "1355904565514620938", "author_id": "1008771665029820416", "author_handle": "CadbyRyan", "created_at": 1612129414.0, "favorite_count": 0, "full_text": "@JnBrymn I would really like to search branches"}, {"id": "1355904401530101762", "author_id": "304048690", "author_handle": "vinzscam", "created_at": 1612129375.0, "favorite_count": 0, "full_text": "@JnBrymn The default tab. Having \"Code\" as the default selected tab instead of \"Repositories\" would make more sense in my opinion \ud83d\ude42. Sometimes I had troubles finding things because of this"}, {"id": "1355904049888030722", "author_id": "33833189", "author_handle": "richardtallent", "created_at": 1612129291.0, "favorite_count": 0, "full_text": "@JnBrymn @daveaglick The ability to search within a repository and *ignore* specific folders (dist, test, docs, etc.). Just being able to search within a specific folder (e.g., \"src\") would mostly do the trick."}, {"id": "1355903792521342979", "author_id": "104159277", "author_handle": "hsverrisson", "created_at": 1612129230.0, "favorite_count": 0, "full_text": "@JnBrymn Case Sensitive search in the code."}, {"id": "1355901837963046914", "author_id": "2390016529", "author_handle": "Ahmeed2m", "created_at": 1612128764.0, "favorite_count": 1, "full_text": "@JnBrymn Exact match search, when I want to search about \"tensor-flow=1.14.0\" with double quotes like with google, I don't expect/want \"tensor flow 1.14.0\" to be matching."}, {"id": "1355901088679907331", "author_id": "42697471", "author_handle": "alexpadraic", "created_at": 1612128585.0, "favorite_count": 0, "full_text": "@JnBrymn Stack tracing in one view"}, {"id": "1355900750271045632", "author_id": "3852951375", "author_handle": "VBAnimal", "created_at": 1612128504.0, "favorite_count": 0, "full_text": "@JnBrymn Being able to search code existing only in specific scopes would be great. Like, show me code samples using requests.session() in a class __init__ (Python)."}, {"id": "1355898857574584329", "author_id": "70086759", "author_handle": "jperelli", "created_at": 1612128053.0, "favorite_count": 0, "full_text": "@JnBrymn Exact string code search. Special chars, spaces and case sensitive included."}, {"id": "1355896639823736838", "author_id": "220145292", "author_handle": "jelmer1980", "created_at": 1612127524.0, "favorite_count": 3, "full_text": "@JnBrymn If i search for the name of a class the fine that defines the class should be on top. Not files that use said class. Also files from the \u201coriginal\u201d repository should be on top. I should not see somebodies 2 year put of date fork"}, {"id": "1355895184962281474", "author_id": "37665322", "author_handle": "Stuart_Lynn", "created_at": 1612127178.0, "favorite_count": 1, "full_text": "@JnBrymn I work on a tool that tries to make open data more useful. One of the things we would love to do is present users a list of github repos that use a given open dataset so people can lean / not reinvent the wheel. Relaxed code search limits would help a lot with that. Thanks"}, {"id": "1355895116288950275", "author_id": "885147090460053505", "author_handle": "Frackham1", "created_at": 1612127161.0, "favorite_count": 0, "full_text": "@JnBrymn its the one part of github where I vastly prefer azure devops' approach,  though I'd struggle to say why off the top of my head. Finding files and especially interacting with historical comparison (ie when did I break this) isn't pleasurable in github sadly."}, {"id": "1355894245324943365", "author_id": "747267908", "author_handle": "nakelgreen", "created_at": 1612126954.0, "favorite_count": 0, "full_text": "@JnBrymn GOAL INTENSE RADIO IS YOUR PLUG FOR MATCHDAY LIVE\n@MFMFC_Lagos vs @KwaraUnitedFC \nAGEGE STADIUM @ 4:00pm\nhttps://t.co/VAO5iqxM7E"}, {"id": "1355892973637148674", "author_id": "19878106", "author_handle": "martin_costello", "created_at": 1612126650.0, "favorite_count": 0, "full_text": "@JnBrymn Ability to search forks in GHE. We have forked code for historical reasons that will never go back to the origin with both being actively worked on, and it makes finding things very difficult sometimes."}, {"id": "1355892955144450048", "author_id": "15358083", "author_handle": "millermedeiros", "created_at": 1612126646.0, "favorite_count": 2, "full_text": "@JnBrymn Only return results that matches the whole search string.\n\nA way to search for special chars like [, {, (, &lt;, \", =, ...\n\nSearch based on RegExp (eg. all lines that starts with uppercase letter and ends with \",\")"}, {"id": "1355891508424142848", "author_id": "25706054", "author_handle": "Silvenga", "created_at": 1612126301.0, "favorite_count": 0, "full_text": "@JnBrymn literal search."}, {"id": "1355891439092129795", "author_id": "122701565", "author_handle": "mrgenixus", "created_at": 1612126284.0, "favorite_count": 0, "full_text": "@JnBrymn It would be nice to be able to search for a particular commit message in the network graph view"}, {"id": "1355891228538069004", "author_id": "122701565", "author_handle": "mrgenixus", "created_at": 1612126234.0, "favorite_count": 0, "full_text": "@JnBrymn I'd like to be able to search withing a particular ref and I'd like results to be tagged with the latest commit they're found in"}, {"id": "1355890586742620160", "author_id": "93433113", "author_handle": "Fabrice1337", "created_at": 1612126081.0, "favorite_count": 0, "full_text": "@JnBrymn Not code search but in repo search : \"most active fork\" appears first but not flagged explicitly as is"}, {"id": "1355889492113174532", "author_id": "61034737", "author_handle": "bobelev_sexy", "created_at": 1612125820.0, "favorite_count": 0, "full_text": "@JnBrymn Ability to exclude directories or file extensions from a search. Skip`tests` dir for example."}, {"id": "1355887415584583680", "author_id": "1218136274130870273", "author_handle": "address_err", "created_at": 1612125325.0, "favorite_count": 0, "full_text": "@JnBrymn The first ten search results is from the same boilerplate."}, {"id": "1355887051837558786", "author_id": "109812348", "author_handle": "arhyth", "created_at": 1612125238.0, "favorite_count": 0, "full_text": "@JnBrymn if i type \u201ccode search\u201d i would like to get results with \u201ccode search\u201d than multiple pages of \u201ccode\u201d and \u201csearch\u201d. or at least to know for certain if it\u2019s not in first page, then it isn\u2019t there jumbled with the other results"}, {"id": "1355886390366457857", "author_id": "836022907", "author_handle": "sjuneja90", "created_at": 1612125081.0, "favorite_count": 0, "full_text": "@JnBrymn A small part of my current work relies on using search for plagiarism detection (manual atm unfortunately, trying to figure out automating it). The indexing changes made that difficult. Other than that, search does struggle with matching text within jupyter notebooks."}, {"id": "1355886057145958401", "author_id": "476999583", "author_handle": "StephenRVance", "created_at": 1612125001.0, "favorite_count": 0, "full_text": "@JnBrymn Support regular expressions and quoted strings with white space and stop treating non-alphanums as separators. Make it easy to scope searches by directory tree or tag/release"}, {"id": "1355883000777605120", "author_id": "1262865250816311296", "author_handle": "xoRift", "created_at": 1612124273.0, "favorite_count": 0, "full_text": "@JnBrymn Add a search bar IN repos instead of having to specify a repo in the general search bar"}, {"id": "1355882394167992323", "author_id": "121960401", "author_handle": "_JonDouglas", "created_at": 1612124128.0, "favorite_count": 1, "full_text": "@JnBrymn De-duplicated results (show me one, not thousands), more highlighting of results that match instead of first match, better advanced search filtering (make them interactable as syntax isn't always a good example and have to lookup how to use each qualifier(https://t.co/Grk2oeET66)"}, {"id": "1355881955284365315", "author_id": "5807302", "author_handle": "perrins", "created_at": 1612124023.0, "favorite_count": 1, "full_text": "@JnBrymn any know security issues like checked in API keys should be removed from search , people finding them"}, {"id": "1355881757153710085", "author_id": "14565895", "author_handle": "dynofu", "created_at": 1612123976.0, "favorite_count": 0, "full_text": "@JnBrymn catch up with opengrok"}, {"id": "1355879583531327492", "author_id": "1076237979595821057", "author_handle": "_smhmd", "created_at": 1612123458.0, "favorite_count": 0, "full_text": "@JnBrymn This feels like a good extension idea, but auto-completion in search if you do `u|` (and it'd reveal `user:`) would be beyond helpful."}, {"id": "1355877995882438660", "author_id": "1005156212823019522", "author_handle": "sachaarbonel", "created_at": 1612123079.0, "favorite_count": 2, "full_text": "@JnBrymn I use GitHub stars a lot. The problem is you can't search then sort by latest starred"}, {"id": "1355877734111703043", "author_id": "1076237979595821057", "author_handle": "_smhmd", "created_at": 1612123017.0, "favorite_count": 1, "full_text": "@JnBrymn Search in repos that have X dependencies. For instance, I want to find a file named `_app.ts` in repos where next and typescript is installed."}, {"id": "1355876739801604097", "author_id": "54223605", "author_handle": "davide_b88", "created_at": 1612122780.0, "favorite_count": 0, "full_text": "@JnBrymn This is weird but I swear every time I search for some code in a repo, tests will be first for no apparent reason (which is useless 99% of the time). I swear the code I'm looking for is often in the last page of results."}, {"id": "1355876061268078594", "author_id": "5315782", "author_handle": "elharo", "created_at": 1612122618.0, "favorite_count": 4, "full_text": "@JnBrymn Also, please give us exact string matches including punctuation. When I search for output.xml I don't want to see every file that contains the word \"output\" and the word \"xml\"."}, {"id": "1355875514263756803", "author_id": "5315782", "author_handle": "elharo", "created_at": 1612122488.0, "favorite_count": 0, "full_text": "@JnBrymn If I search for DataHolder, then https://t.co/7W78M1dG9Z (or .c, .py, whatever) should be the first result. *Not* 25 other classes that import DataHolder.\n\nPerhaps also useful to put definitions of methods ahead of uses of methods, but the file name is the biggest annoyance."}, {"id": "1355875497243275269", "author_id": "814126051890708480", "author_handle": "joaosilva155", "created_at": 1612122484.0, "favorite_count": 0, "full_text": "@JnBrymn Be able to select the branch/tag you want to search in so that it\u2019s easier to find what you are searching for in previous versions of your code"}, {"id": "1355874432426909700", "author_id": "24169571", "author_handle": "wmertens", "created_at": 1612122230.0, "favorite_count": 0, "full_text": "@JnBrymn Searching only in a certain branch"}, {"id": "1355868931802746883", "author_id": "1254687673433894912", "author_handle": "FSotch", "created_at": 1612120918.0, "favorite_count": 0, "full_text": "@JnBrymn Two things: #Firstly improve th\u00e9 Access to #tutorial #video including this in #software for Coding\n#Secondly improve #front #end of many #Search #Engine as Google for improve th\u00e9 compatibility with Layout of #code #language."}, {"id": "1355868386891243526", "author_id": "3114255126", "author_handle": "_TimMcMahon", "created_at": 1612120788.0, "favorite_count": 1, "full_text": "@JnBrymn Could you make it easier to find code that shouldn't be on GitHub?\n\nI like to start searching for domains names. Once I see something out of place, I'll refine my search.\n\nThere's so much noise caused by people loading crawler info into GitHub. That could be ignored."}, {"id": "1355867934636339207", "author_id": "139989962", "author_handle": "romitagl", "created_at": 1612120681.0, "favorite_count": 1, "full_text": "@JnBrymn Please extend your indexing to support searches like: \"v-slot:activator\" (check the attached screenshots). Another big improvement would be on the presentation of the search results adding grouping-by (repo) for e.g. and avoid jumping pages from 5 to 99 like done at present. \ud83d\ude4b\u200d\u2642\ufe0f https://t.co/OIcTqPSgZB"}, {"id": "1355862663432167428", "author_id": "16346860", "author_handle": "_ManojC", "created_at": 1612119424.0, "favorite_count": 1, "full_text": "@JnBrymn Limit search to a specific directory in the code."}, {"id": "1355862321181163520", "author_id": "14328033", "author_handle": "richardloxley", "created_at": 1612119342.0, "favorite_count": 2, "full_text": "@JnBrymn @DominicPajak Show all matches in every file rather than just the top few results in each file.\n\nOr be able to click through to each file from the top results to see all results highlighted in the file.\n\nI often have to clone a repository and do \u201cgrep -r\u201d just to find the results."}, {"id": "1355860434927104003", "author_id": "149035331", "author_handle": "jshawl", "created_at": 1612118893.0, "favorite_count": 0, "full_text": "@JnBrymn Sort search results by git blame time stamp. I want to see the most recent changes first."}, {"id": "1355859217949847554", "author_id": "1449424921", "author_handle": "enzo_mdd", "created_at": 1612118602.0, "favorite_count": 0, "full_text": "@JnBrymn Symbol search like IntelliJ.\nFull regex support."}, {"id": "1355858457665163266", "author_id": "151816066", "author_handle": "geve82", "created_at": 1612118421.0, "favorite_count": 0, "full_text": "@JnBrymn search on branches is a must have"}, {"id": "1355857990381953025", "author_id": "9787962", "author_handle": "warpling", "created_at": 1612118310.0, "favorite_count": 5, "full_text": "@JnBrymn Make it visually clear if I'm searching the repo or all of GitHub!"}, {"id": "1355856568366071809", "author_id": "41627397", "author_handle": "Zephyrox", "created_at": 1612117971.0, "favorite_count": 0, "full_text": "@JnBrymn Exclude every repo with php.."}, {"id": "1355855382133018625", "author_id": "56054135", "author_handle": "wouterhorre", "created_at": 1612117688.0, "favorite_count": 2, "full_text": "@JnBrymn Exact string search. I want to be able to search e.g. \"def foo\", without it searching for def and foo separately."}, {"id": "1355854678903431170", "author_id": "2935952994", "author_handle": "lavishsaluja", "created_at": 1612117520.0, "favorite_count": 0, "full_text": "@JnBrymn Adding \"match by\"\nfilename/function/class/module/etc\n\nBucket forks with upstream repo &amp; show a different view for all forks with different files only (repeating files are just noise)"}, {"id": "1355854151981273089", "author_id": "115793", "author_handle": "mucio", "created_at": 1612117395.0, "favorite_count": 1, "full_text": "@JnBrymn Double quote for exact match search.\n\nBut you don't need to ask us to know this"}, {"id": "1355853993591730176", "author_id": "1886048976", "author_handle": "henlojseam", "created_at": 1612117357.0, "favorite_count": 0, "full_text": "@JnBrymn Semantic code search with natural language. Search query example: I am searching for a function that sorts integers in a Postgresql database in python."}, {"id": "1355853515940376578", "author_id": "14468146", "author_handle": "simonski", "created_at": 1612117243.0, "favorite_count": 0, "full_text": "@JnBrymn A terminal extension to ack remote repos"}, {"id": "1355850808932372482", "author_id": "87028929", "author_handle": "anentropic", "created_at": 1612116597.0, "favorite_count": 1, "full_text": "@JnBrymn Exact matches i.e. less fuzzy. It's source code, I generally don't want it to treat underscores etc as insignificant. An option to enable case sensitivity would also be useful. I basically want it to work like the search in my IDE rather than a natural language document search."}, {"id": "1355850585325629440", "author_id": "25224532", "author_handle": "YitzOfTheBits", "created_at": 1612116544.0, "favorite_count": 0, "full_text": "@JnBrymn filtering to function definitions only"}, {"id": "1355849618190442499", "author_id": "2882329527", "author_handle": "igetin_", "created_at": 1612116314.0, "favorite_count": 0, "full_text": "@JnBrymn Make it more like https://t.co/nvQ6P5gAGg.\n\nRegular expression support in particular would be really nice."}, {"id": "1355849478511734784", "author_id": "78741646", "author_handle": "JustinHunthrop", "created_at": 1612116280.0, "favorite_count": 0, "full_text": "@JnBrymn Integrate dynamic search into the repo context. I want to do relative search without leaving the current file I\u2019m on. It would enable quick referencing without navigating away from the current file or opening a new tab."}, {"id": "1355848999924760578", "author_id": "1301324985177313280", "author_handle": "_h0x0d_", "created_at": 1612116166.0, "favorite_count": 5, "full_text": "@JnBrymn how about sort results by commit date ?"}, {"id": "1355848272351526912", "author_id": "1076605762380746752", "author_handle": "LordOfThePies4", "created_at": 1612115993.0, "favorite_count": 0, "full_text": "@JnBrymn - Add support for non-alphanumeric characters in search.\n- Add more results per page\n\nty"}, {"id": "1355845759254601729", "author_id": "795937522840965120", "author_handle": "graylanj", "created_at": 1612115394.0, "favorite_count": 0, "full_text": "@JnBrymn Cross ownership repository cooperation.  For the code search. It would be nice for the search box to search sitewide and repo wide. Tis confusing what one does."}, {"id": "1355844743926788096", "author_id": "132631682", "author_handle": "alex8x8", "created_at": 1612115151.0, "favorite_count": 0, "full_text": "@JnBrymn Search for filename or type name. Searching for a class e.g. in C# I often get tons of results where it is used but I want to find where it is defined. which is always placed after dozens of the other results."}, {"id": "1355844240388059138", "author_id": "1689190446", "author_handle": "CHTJonas", "created_at": 1612115031.0, "favorite_count": 0, "full_text": "@JnBrymn Searching forks rather than the upstream!"}, {"id": "1355842542667882497", "author_id": "7126272", "author_handle": "twocs", "created_at": 1612114627.0, "favorite_count": 0, "full_text": "@JnBrymn Today I wanted to exclude an organisation from my search because I wanted to find all third party related code. Was very surprised to not be able to use advanced search along the lines of 'atom user:\"NOT atom\"'. Please improve exclusions."}, {"id": "1355842453614551048", "author_id": "43269190", "author_handle": "_CollinRea", "created_at": 1612114605.0, "favorite_count": 0, "full_text": "@JnBrymn I\u2019d love to be able to see project composition or search by it, like I\u2019m looking for something in a Jenkinsfile but in a Python project. Etc."}, {"id": "1355841526811783168", "author_id": "2224564819", "author_handle": "_larkey", "created_at": 1612114384.0, "favorite_count": 0, "full_text": "@JnBrymn exact matches.  The search is unusable when you want to look for a specific string.  I usually end up cloning the repo in question and running\n\nfind . -type f -exec grep MYREGEX {} +\n\non it."}, {"id": "1355841519001894920", "author_id": "14172694", "author_handle": "drewnoakes", "created_at": 1612114383.0, "favorite_count": 1, "full_text": "@JnBrymn Search by file type. Exclude forks (only sources)."}, {"id": "1355841508382027785", "author_id": "495430242", "author_handle": "IgorBrigadir", "created_at": 1612114380.0, "favorite_count": 1, "full_text": "@JnBrymn Add an option to order / group by repository, so I can get results from multiple repositories, not dozens of results from the same repository. Also +1 for more results per page."}, {"id": "1355841265313710080", "author_id": "8388792", "author_handle": "bartekci", "created_at": 1612114322.0, "favorite_count": 0, "full_text": "@JnBrymn The results as a whole are usually good, especially with Advanced Search\n\nBut there's a lot of results and I think they suffer from \"not going past the first page\" syndrome. If we could adjust facets (or further fuzzy-find) results in a more responsive interface? That'd be rad"}, {"id": "1355840893371244546", "author_id": "12378852", "author_handle": "jamesjamtho", "created_at": 1612114233.0, "favorite_count": 1, "full_text": "@JnBrymn Increased ability to specify exactly what we want to search over would help."}, {"id": "1355839427227090946", "author_id": "867093419973324801", "author_handle": "PITLORDMOSH", "created_at": 1612113884.0, "favorite_count": 0, "full_text": "@JnBrymn Code search within an organization"}, {"id": "1355839143557931009", "author_id": "81227993", "author_handle": "tomwhoscontrary", "created_at": 1612113816.0, "favorite_count": 2, "full_text": "@JnBrymn @deniseyu21 Distinguishing uses and definitions of symbols, and showing the definitions first."}, {"id": "1355837966967562240", "author_id": "975497118", "author_handle": "louis_guitton", "created_at": 1612113536.0, "favorite_count": 0, "full_text": "@JnBrymn By now people are used to command palettes and other sublime/atom/VSCode syntaxes, I feel like a lot of the UX could be improved by going in that direction.\nFor example, to open a file, I'm expecting Cmd + P and typing the filename, not to search with prefix filename:"}, {"id": "1355836689827115009", "author_id": "2863707509", "author_handle": "0xAFA", "created_at": 1612113231.0, "favorite_count": 0, "full_text": "@JnBrymn Filtering out duplicate code results"}, {"id": "1355835241068457985", "author_id": "81333599", "author_handle": "olaf_k", "created_at": 1612112886.0, "favorite_count": 1, "full_text": "@JnBrymn @chrismessina poke @__jakub_g"}, {"id": "1355835056682643456", "author_id": "17187971", "author_handle": "gotofritz", "created_at": 1612112842.0, "favorite_count": 1, "full_text": "@JnBrymn Special characters are significant in code, they shouldn't be ignored!\n\nSearch within last set of results\n\nWhen you select \"within this repo\", bring up a tree view of the folder structure and let users pick where to search\n\nSame, but with a list of file suffixes used in repo"}, {"id": "1355831978487111682", "author_id": "1153263958922616832", "author_handle": "aprillion_0042", "created_at": 1612112108.0, "favorite_count": 1, "full_text": "@JnBrymn I could use exact match by default when searching withing single repo\n\nwhen I try to find \"function doSomething\", I am usually not interested in the hundreds of files that contain \"function\" and \"doSomething\"\n\nalso for \"timeout(\", I don't care about all those \"setTimeout\""}, {"id": "1355830216652951553", "author_id": "3165035458", "author_handle": "Deputy2_BHA", "created_at": 1612111688.0, "favorite_count": 0, "full_text": "@JnBrymn Upload how it works to my brain!"}, {"id": "1355828947594915841", "author_id": "70513915", "author_handle": "d0m96", "created_at": 1612111385.0, "favorite_count": 1, "full_text": "@JnBrymn Prioritise search on the latest commit. I rarely want to receive search results from some old commit."}, {"id": "1355828623958278147", "author_id": "55587483", "author_handle": "jusjosgra", "created_at": 1612111308.0, "favorite_count": 0, "full_text": "@JnBrymn There\u2019s a code search feature?"}, {"id": "1355828622154731524", "author_id": "13727912", "author_handle": "asterite", "created_at": 1612111308.0, "favorite_count": 4, "full_text": "@JnBrymn Exact string match"}, {"id": "1355828231094624256", "author_id": "1198936336394280960", "author_handle": "KlohnaTomas", "created_at": 1612111215.0, "favorite_count": 0, "full_text": "@JnBrymn @gehgerritsen Just copy https://t.co/IGTEKmsj2f features (@natfriedman mentioned this a ~year ago when it showed up), it\u2019s my goto GitHub search, hardly use the native one."}, {"id": "1355827790499733504", "author_id": "1341584494143418368", "author_handle": "iwasntbeingser1", "created_at": 1612111109.0, "favorite_count": 0, "full_text": "@JnBrymn Treat punctuation as any alphanumeric characters and make it part of the search"}, {"id": "1355827084854243328", "author_id": "123587538", "author_handle": "sergey_pedan", "created_at": 1612110941.0, "favorite_count": 0, "full_text": "@JnBrymn Ask it closer to the context: somewhere at the search results page"}, {"id": "1355826802690641923", "author_id": "180695421", "author_handle": "__yoshua", "created_at": 1612110874.0, "favorite_count": 1, "full_text": "@JnBrymn There\u2019s times I search for code that includes an annotation, and GitHub can\u2019t find it."}, {"id": "1355826736152391688", "author_id": "235221327", "author_handle": "aldomann", "created_at": 1612110858.0, "favorite_count": 0, "full_text": "@JnBrymn The ability to ignore vendored code when searching."}, {"id": "1355826699427053569", "author_id": "432572596", "author_handle": "aleksboc", "created_at": 1612110849.0, "favorite_count": 0, "full_text": "@JnBrymn Exact string matches, wildcards, special characters"}, {"id": "1355826663960027136", "author_id": "20902054", "author_handle": "PierreZ", "created_at": 1612110841.0, "favorite_count": 0, "full_text": "@JnBrymn I would love to have something to precise that the words I\u2019m looking for are on the same line \ud83d\ude07"}, {"id": "1355826289337266181", "author_id": "14640100", "author_handle": "mojavelinux", "created_at": 1612110752.0, "favorite_count": 1, "full_text": "@JnBrymn @struberg Remove duplicates. It's almost impossible to search since so many results are just the same file over and over. And it's not just exact duplicates, but like duplicates as well. I'm looking for variety in results."}, {"id": "1355826238502400006", "author_id": "741578904", "author_handle": "varunuppal81", "created_at": 1612110739.0, "favorite_count": 0, "full_text": "@JnBrymn search for repos with push events on a given branch. More repo search than code search but still useful"}, {"id": "1355825958897508354", "author_id": "17416372", "author_handle": "olance", "created_at": 1612110673.0, "favorite_count": 2, "full_text": "@JnBrymn Sorry if that\u2019s a bit harsh but it needs a complete rebuild IMO\nNo exact search, non-alphanums are ignored (!!!) and only topmost results shown in each file, so you basically have to search manually after \"searching\" \ud83d\ude10\nIf those were fixed at last at repo-lvl search that\u2019d be \ud83d\udc4d"}, {"id": "1355825313486430209", "author_id": "9570472", "author_handle": "szafranek", "created_at": 1612110519.0, "favorite_count": 0, "full_text": "@JnBrymn @ChiaraM_87 Exclude archived repos, please! (I use GitHub Enterprise)"}, {"id": "1355825187539869699", "author_id": "1102373224183197696", "author_handle": "FisheyJay", "created_at": 1612110489.0, "favorite_count": 0, "full_text": "@JnBrymn Hmmm good question ... will consider and ponder"}, {"id": "1355823754790711298", "author_id": "65652445", "author_handle": "ForbesLindesay", "created_at": 1612110147.0, "favorite_count": 7, "full_text": "@JnBrymn Just let me exclude tests. I'm so often searching for either \"where is this function defined\" or \"where is this function called\" and in a good lib I get so many results that are tests."}, {"id": "1355821653884891136", "author_id": "1274001975831678979", "author_handle": "WhyNotHugo", "created_at": 1612109646.0, "favorite_count": 0, "full_text": "@JnBrymn The search bar is on the left if I'm not logged in, but in the right after I log in (or vice-versa, I can't remember).\n\nPlease always keep the search bar in the same place. It's absurd that it constantly switches places."}, {"id": "1355820734300491777", "author_id": "849055753", "author_handle": "BenMarengo", "created_at": 1612109427.0, "favorite_count": 0, "full_text": "@JnBrymn Aggregate results by repository, then directory, ten file"}, {"id": "1355819443750916098", "author_id": "888103384582172672", "author_handle": "brotherperes", "created_at": 1612109119.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll @Heatherlovessci"}, {"id": "1355818813569331200", "author_id": "609943150", "author_handle": "mwai_william", "created_at": 1612108969.0, "favorite_count": 0, "full_text": "@JnBrymn Ability to specify search parameters type e.g. function, variable declaration, class declaration, constant e.t.c"}, {"id": "1355817614786891778", "author_id": "1108341345683410950", "author_handle": "0xCAP", "created_at": 1612108683.0, "favorite_count": 0, "full_text": "@JnBrymn I'd love some VSCode-flavoured advanced search syntax such as `fileName@functionName`, or `fileName:lineNumber`"}, {"id": "1355816637367275524", "author_id": "130825563", "author_handle": "otikik", "created_at": 1612108450.0, "favorite_count": 0, "full_text": "@JnBrymn I always get half a second of anxiety when using the top-left search box \"is it going to search over the whole GitHub? Oh ok just this repo\". I don't know how I would fix that but I would rather not have that half a second of anxiety there."}, {"id": "1355815303196901378", "author_id": "35159911", "author_handle": "alvin_chang", "created_at": 1612108132.0, "favorite_count": 0, "full_text": "@JnBrymn Make the search box an universal one so results from Gist are also shown?"}, {"id": "1355814602148360196", "author_id": "18410310", "author_handle": "cmsj", "created_at": 1612107965.0, "favorite_count": 1, "full_text": "@JnBrymn I like that I can filter by language, but I\u2019d like to be able to go deeper - eg being able to search for a function call, to exclude declarations (or header files), it would also be helpful to let me say that multiple search terms must cluster within a few lines of each other."}, {"id": "1355813094124122114", "author_id": "1079695417556783104", "author_handle": "chris_07734", "created_at": 1612107606.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll Searching on searches eg find all searches that contain \u201cReact\u201d then sub search for \u201cfs\u201d the results would be more useful than a \u201cReact fs\u201d search. The single layered nature of the string part of search feels limiting. Understand technically this may be a bit of a pipe dream"}, {"id": "1355813077212569607", "author_id": "1177977514586587136", "author_handle": "_IllegalBeagle_", "created_at": 1612107602.0, "favorite_count": 0, "full_text": "@JnBrymn The ability to use RegEx would be useful"}, {"id": "1355813069952331778", "author_id": "820456650", "author_handle": "jahidkureci", "created_at": 1612107600.0, "favorite_count": 0, "full_text": "@JnBrymn Silly but keyboard shortcut to initiate search would be amazing :)\nI'm so used to using the Cmd+F to search I automatically do that when I'm in a repo and get annoyed when the browser search comes up."}, {"id": "1355812779907821570", "author_id": "100218900", "author_handle": "g105b", "created_at": 1612107531.0, "favorite_count": 1, "full_text": "@JnBrymn Token-based search, so searching behaves similarly to Jetbrains' \"find anything\" but for the whole of GitHub."}, {"id": "1355812760706297859", "author_id": "388737622", "author_handle": "mmalikmudassar", "created_at": 1612107526.0, "favorite_count": 0, "full_text": "@JnBrymn It works, please don't touch it"}, {"id": "1355812590828584960", "author_id": "1034540813718626304", "author_handle": "_mikroskeem", "created_at": 1612107486.0, "favorite_count": 0, "full_text": "@JnBrymn Support non-alphanumeric characters and prefer file names over code in search results please. So tired of cloning every repository to just run fd/ripgrep on it."}, {"id": "1355812340231532545", "author_id": "175016890", "author_handle": "dmg60k", "created_at": 1612107426.0, "favorite_count": 0, "full_text": "@JnBrymn a whole lot my man."}, {"id": "1355811776793878530", "author_id": "17705183", "author_handle": "fustbariclation", "created_at": 1612107292.0, "favorite_count": 0, "full_text": "@JnBrymn Couldn\u2019t you just implement unix regular expressions?"}, {"id": "1355811006639874059", "author_id": "87297324", "author_handle": "HailwoodNZ", "created_at": 1612107108.0, "favorite_count": 0, "full_text": "@JnBrymn Would be great if we could filter out likely test results.\nOften I want to find usages in the codebase, or the definition itself, but have to sift through 12 pages of tests calling it instead."}, {"id": "1355808159844032516", "author_id": "1073649115", "author_handle": "HusnainTaseer", "created_at": 1612106429.0, "favorite_count": 1, "full_text": "@JnBrymn In a good search tool, regex search should be supported with search operators like AND/OR etc. Plus there should also be an option to search in a specific repo, branch and file extension For Example:\nRepo:Branch:.py &lt;SEARCH EXPRESSION&gt;"}, {"id": "1355806196972843008", "author_id": "100873706", "author_handle": "ProgrammerDude", "created_at": 1612105961.0, "favorite_count": 1, "full_text": "@JnBrymn Multi word search should work. Special characters should not be stripped."}, {"id": "1355805954810531841", "author_id": "1036245345108410368", "author_handle": "lesliearkorful", "created_at": 1612105903.0, "favorite_count": 0, "full_text": "@JnBrymn Searching for and in branches."}, {"id": "1355805815358148613", "author_id": "400509377", "author_handle": "__malkia__", "created_at": 1612105870.0, "favorite_count": 0, "full_text": "@JnBrymn When searching for API use (C/C++), it keeps finding mostly the .h-eader files from SDKs, and often with lots of duplication (be it Windows SDK, or any other). It'll be great if I can quickly search just .cpp/.c files instead of mixed with .h-eader ones."}, {"id": "1355805674836520964", "author_id": "650733", "author_handle": "MostFoolhardy", "created_at": 1612105837.0, "favorite_count": 1, "full_text": "@JnBrymn Organisation search can be a bit of a faff. It'd be really useful if I could easily jump up to the organisation of a projects scope, or to searching an organisation I'm in.\n\nAlso exact strings and definitions higher up the results."}, {"id": "1355805529751384065", "author_id": "931681364", "author_handle": "mathiasklenk", "created_at": 1612105802.0, "favorite_count": 0, "full_text": "@JnBrymn Keyboard commands like @Superhuman"}, {"id": "1355804203357253633", "author_id": "1880872232", "author_handle": "puritanicdev", "created_at": 1612105486.0, "favorite_count": 0, "full_text": "@JnBrymn As a few other devs pointed out, searching by filename would be really great! Other than that, I haven't been using it extensively, mostly searches based on language extension."}, {"id": "1355802847770800135", "author_id": "2508099280", "author_handle": "zeitgeistse", "created_at": 1612105163.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll Please make forks searchable."}, {"id": "1355802520124329984", "author_id": "20533296", "author_handle": "pcolazurdo", "created_at": 1612105085.0, "favorite_count": 1, "full_text": "@JnBrymn @rakyll Search inside search results. Return repo names and be able to search only in a subset of repos. Regex search. Cmdline search. Search with license as filter. Search with more granular excludes (i.e. not tests)"}, {"id": "1355802253089759233", "author_id": "703122697232863233", "author_handle": "ThomasBurkhartB", "created_at": 1612105021.0, "favorite_count": 3, "full_text": "@JnBrymn A search that shows me all open issues for all Repositories where I m a maintainer. The same for PRs"}, {"id": "1355802024487636992", "author_id": "583076852", "author_handle": "orklah", "created_at": 1612104966.0, "favorite_count": 0, "full_text": "@JnBrymn Pleaaase, when searching a particular string, if this string happen to be the name of a file(minus the extension), make this file the first result and not a random result at page 9/54"}, {"id": "1355801965192744961", "author_id": "227962840", "author_handle": "qxip", "created_at": 1612104952.0, "favorite_count": 0, "full_text": "@JnBrymn Let us search in forks"}, {"id": "1355801943306719233", "author_id": "50336193", "author_handle": "govindani", "created_at": 1612104947.0, "favorite_count": 0, "full_text": "@JnBrymn Find files by name, pleeeeeze \ud83d\ude4f\ud83c\udffd \ud83d\ude4f\ud83c\udffd \ud83d\ude4f\ud83c\udffd"}, {"id": "1355801466695344128", "author_id": "270074189", "author_handle": "runewake2", "created_at": 1612104833.0, "favorite_count": 0, "full_text": "@JnBrymn Being able to find projects that have adopted another library or platform would be handy. Especially if backlinks to those libraries repos were presented."}, {"id": "1355801438308368385", "author_id": "3304688113", "author_handle": "dave_hirschfeld", "created_at": 1612104827.0, "favorite_count": 0, "full_text": "@JnBrymn @junpenglao The ability to filter out files or folders.\n\nConcrete use case: excluding test files/folders from the search"}, {"id": "1355801422374133765", "author_id": "295763563", "author_handle": "gentlerainsky", "created_at": 1612104823.0, "favorite_count": 0, "full_text": "@JnBrymn In the same project: Search a keyword across branches or commit version\nMay be not the best but quite useful for large or old project."}, {"id": "1355799201662304257", "author_id": "10417972", "author_handle": "gunar", "created_at": 1612104293.0, "favorite_count": 0, "full_text": "@JnBrymn Make the search more prominent. It took me years to learn that it even exited - and is super useful."}, {"id": "1355799156711940096", "author_id": "2994824137", "author_handle": "gaparv", "created_at": 1612104283.0, "favorite_count": 0, "full_text": "@JnBrymn I would like a qualified symbol such as Type and Method search on repository level for supported languages. Similar to https://t.co/he3IuIUdYU"}, {"id": "1355799000549613570", "author_id": "10417972", "author_handle": "gunar", "created_at": 1612104245.0, "favorite_count": 3, "full_text": "@JnBrymn Searching for specific chars doesn't work. It keeps generalising (i.e. removing non-alphanumeric chars from the search). Let us be specific if we want please. Thanks in advance."}, {"id": "1355795367011491842", "author_id": "4515449363", "author_handle": "remi_rousselet", "created_at": 1612103379.0, "favorite_count": 6, "full_text": "@JnBrymn Listing a few popular queries?\n\nIt took me a while to realise that I can do `user:@/me is:pr is:open` for example"}, {"id": "1355794802084782081", "author_id": "1355061369029058564", "author_handle": "LastSaiyan3", "created_at": 1612103244.0, "favorite_count": 0, "full_text": "@JnBrymn Not sure if this exists. A feature to search only for issues. I was searching for open source software to contribute to, this would help a lot"}, {"id": "1355794448102400000", "author_id": "3311128979", "author_handle": "callumorphism", "created_at": 1612103160.0, "favorite_count": 0, "full_text": "@JnBrymn @deniseyu21 Ability to do exact string matches (on Github Enterprise). My company paid for SourceGraph pretty much just to get this this feature."}, {"id": "1355792856703754240", "author_id": "23605860", "author_handle": "RichieAHB", "created_at": 1612102781.0, "favorite_count": 0, "full_text": "@JnBrymn In my (naive!) view there\u2019s at least two different search domains on GH:\n\na) within a repo\nb) many (/ all) repos\n\nTo me, there\u2019s so much prior art in \u201ca\u201d that I think iterating to VSCode / IntelliJ etc. would suffice (e.g. exact strings being a glaring omission)."}, {"id": "1355792329945309186", "author_id": "111660057", "author_handle": "bouvyd", "created_at": 1612102655.0, "favorite_count": 2, "full_text": "@JnBrymn Searching in another branch than the main one"}, {"id": "1355792203818422276", "author_id": "1314662545974792192", "author_handle": "sabotek", "created_at": 1612102625.0, "favorite_count": 0, "full_text": "@JnBrymn For the search functionality to behave like a search should... I see many peoplehave already gotten specific about all the issues with it."}, {"id": "1355792039216992257", "author_id": "232818171", "author_handle": "prahladyeri", "created_at": 1612102586.0, "favorite_count": 0, "full_text": "@JnBrymn Advanced search by pattern could be a great start. For example, the token you're looking for is a variable, class name, constant or something else, etc."}, {"id": "1355791896698900480", "author_id": "972810922518630400", "author_handle": "pavel_polivka", "created_at": 1612102552.0, "favorite_count": 0, "full_text": "@JnBrymn Another awesome intellij feature, you can search with short names. Class name AnotherFileManager. You can find by AFM."}, {"id": "1355791594285375489", "author_id": "161665552", "author_handle": "krenvirsh", "created_at": 1612102480.0, "favorite_count": 1, "full_text": "@JnBrymn Support for regular expressions would be wonderful to have."}, {"id": "1355791258887852032", "author_id": "972810922518630400", "author_handle": "pavel_polivka", "created_at": 1612102400.0, "favorite_count": 0, "full_text": "@JnBrymn Basically what intellij does \ud83d\ude02 context aware usage search, I am in the class and want to know usages of that class, where this public method is used?"}, {"id": "1355790912543195136", "author_id": "319927051", "author_handle": "alikutly", "created_at": 1612102317.0, "favorite_count": 0, "full_text": "@JnBrymn Visual Studio like find references feature would be really cool."}, {"id": "1355790304608194561", "author_id": "338613703", "author_handle": "craigjbass", "created_at": 1612102172.0, "favorite_count": 0, "full_text": "@JnBrymn I would like it to reliably return results that I know are there. I have a few times found references locally with ag which do not show on the GitHub search."}, {"id": "1355788463728156672", "author_id": "1197751370746597376", "author_handle": "KatlehoKomeke", "created_at": 1612101733.0, "favorite_count": 0, "full_text": "@JnBrymn Completely change the UI/UX altogether and allow us to highlight and copy all the code with one button."}, {"id": "1355788296081735683", "author_id": "47116836", "author_handle": "spacentropy", "created_at": 1612101693.0, "favorite_count": 0, "full_text": "@JnBrymn acquire Sourcegraph and integrate it"}, {"id": "1355787507426799616", "author_id": "9453502", "author_handle": "rdohms", "created_at": 1612101505.0, "favorite_count": 0, "full_text": "@JnBrymn @grhmc I would love for the search api to not cut off after x time and not return full results, or to be able to influence which results I want first.\n\nWe built a bot that needed this and had to switch to brute force iteration of our repos."}, {"id": "1355786992399900672", "author_id": "14309776", "author_handle": "knoopx", "created_at": 1612101382.0, "favorite_count": 1, "full_text": "@JnBrymn Exact match, most of the time I get useless results. Also a way to ignore the same hundred times forked repository."}, {"id": "1355786905036709891", "author_id": "7877902", "author_handle": "ErikHellman", "created_at": 1612101362.0, "favorite_count": 2, "full_text": "@JnBrymn Finding what dependencies are used,"}, {"id": "1355786496159215616", "author_id": "529315717", "author_handle": "AYearInTri", "created_at": 1612101264.0, "favorite_count": 0, "full_text": "@JnBrymn Filter repositories by libraries"}, {"id": "1355784725642833922", "author_id": "2951908043", "author_handle": "Birkelbayes", "created_at": 1612100842.0, "favorite_count": 0, "full_text": "@JnBrymn Exclude specific results. I sometimes want to look for applications of a function but instead I get thousands of pages of the implementation of the function because the library-repo was forked so often."}, {"id": "1355784123764228106", "author_id": "74816051", "author_handle": "bhavik1st", "created_at": 1612100699.0, "favorite_count": 0, "full_text": "@JnBrymn Filters by project, language, filename"}, {"id": "1355782077174710272", "author_id": "1018840293901328384", "author_handle": "dmtrKovalenko", "created_at": 1612100211.0, "favorite_count": 0, "full_text": "@JnBrymn It would save so much time for me if it will be possible to search simultaneously for file names and code. \n\nAnother thing, mostly a miracle I think, but some kind of regeneration search will mostly remove need of cloning repos for me \ud83d\ude0a"}, {"id": "1355781462704979973", "author_id": "18191376", "author_handle": "waldekm", "created_at": 1612100064.0, "favorite_count": 1, "full_text": "@JnBrymn @resing Searching for text including special characters"}, {"id": "1355780984231190529", "author_id": "14566379", "author_handle": "brunoborges", "created_at": 1612099950.0, "favorite_count": 1, "full_text": "@JnBrymn #java search integration with javadoc and #maven central.\n\nOh, and javadoc preview. Like you do with markdown. :-)"}, {"id": "1355780553920946178", "author_id": "1459122230", "author_handle": "Smurlleen", "created_at": 1612099847.0, "favorite_count": 1, "full_text": "@JnBrymn A retweet will help this course https://t.co/Lmry26FV4w"}, {"id": "1355780357971447808", "author_id": "4590957984", "author_handle": "Godzilla_on_ice", "created_at": 1612099801.0, "favorite_count": 0, "full_text": "@JnBrymn Could search take into context where I am (organization/repo/file) unless otherwise specified.\n\nI think what would make this more clear is: instead of having different contexts appear in the search results (enter to search this repo), have them be check boxes."}, {"id": "1355778242586705923", "author_id": "364464721", "author_handle": "ytsheng", "created_at": 1612099296.0, "favorite_count": 0, "full_text": "@JnBrymn Code search exact matches or regex. In terms of implementation I think it could be a one liner - so, pretty please!"}, {"id": "1355777767963414534", "author_id": "1151186888553746432", "author_handle": "DylanDmitriGray", "created_at": 1612099183.0, "favorite_count": 0, "full_text": "@JnBrymn When searching for a function name, show both \"here's the definition\" and \"here's where it's used\"."}, {"id": "1355777535490064385", "author_id": "176145353", "author_handle": "rdeazambuja78", "created_at": 1612099128.0, "favorite_count": 0, "full_text": "@JnBrymn Make it work on forked repos?"}, {"id": "1355776904826134532", "author_id": "1086210121", "author_handle": "Jan__Bol", "created_at": 1612098977.0, "favorite_count": 0, "full_text": "@JnBrymn Being able to sort search results by e.g file size, which is also an info that would be nice to see"}, {"id": "1355775940241088514", "author_id": "23543141", "author_handle": "eDominykas", "created_at": 1612098747.0, "favorite_count": 0, "full_text": "@JnBrymn @trivikram Filter out repos by topic and archived repos..."}, {"id": "1355774753404026883", "author_id": "864507833819312130", "author_handle": "HippocampusGirl", "created_at": 1612098464.0, "favorite_count": 0, "full_text": "@JnBrymn Please add an option to filter out duplicate results"}, {"id": "1355774549430833152", "author_id": "2202941", "author_handle": "maxhawkins", "created_at": 1612098416.0, "favorite_count": 2, "full_text": "@JnBrymn Down-ranking repeated matches from duplicate files. If the same library is vendored in many repos it's difficult to search for uses of its API.\n\nTry searching sqlite3_changeset_iter. You get the same header again and again and the first non-library file is ~12 pages in."}, {"id": "1355773453106880515", "author_id": "894150961274474496", "author_handle": "TheGrand547", "created_at": 1612098154.0, "favorite_count": 1, "full_text": "@JnBrymn @DropBearBytes probably already there but searching for special punctuation characters is really wonky"}, {"id": "1355773240313049089", "author_id": "84434731", "author_handle": "pablocastilla", "created_at": 1612098104.0, "favorite_count": 0, "full_text": "@JnBrymn If you search a function the first result returned must be the function implementation"}, {"id": "1355772776737431558", "author_id": "189016049", "author_handle": "sdothaney", "created_at": 1612097993.0, "favorite_count": 1, "full_text": "@JnBrymn I use it all the time and it\u2019s very good. One thing I constantly hit is I\u2019ll search a specific file name and that perfect file name match is on page 4 or 5 of the results. Also, I\u2019d love a modifier to search across branches (maybe it exists?)"}, {"id": "1355771494220128256", "author_id": "1249427270252417025", "author_handle": "Guysha16", "created_at": 1612097687.0, "favorite_count": 0, "full_text": "@JnBrymn It would be great if you could search code that's been added since a specific date. Today you can't actually do it, and need to sort the result by index date.\nAlso, it's strange that the sorting doesn't work when you have only one page."}, {"id": "1355771046251663365", "author_id": "52413000", "author_handle": "robsmallshire", "created_at": 1612097581.0, "favorite_count": 1, "full_text": "@JnBrymn Search for a file by name."}, {"id": "1355771006451810308", "author_id": "352319190", "author_handle": "chatenilesh", "created_at": 1612097571.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll Ability to search keywords with special characters. Ex. \"func(\""}, {"id": "1355770791690792962", "author_id": "600995003", "author_handle": "jaympatel1893", "created_at": 1612097520.0, "favorite_count": 0, "full_text": "@JnBrymn Search in branch?"}, {"id": "1355770547750236163", "author_id": "2760140572", "author_handle": "ArchCityAnon", "created_at": 1612097462.0, "favorite_count": 0, "full_text": "@JnBrymn Hire me."}, {"id": "1355770358410866688", "author_id": "157802323", "author_handle": "vsoch", "created_at": 1612097417.0, "favorite_count": 1, "full_text": "@JnBrymn I did a search recently where I simply wanted to find the largest X files, across all of GitHub. It was near impossible because I\u2019d have to guess a range that includes them, retrieve, and then sort (assuming I have all too results). 1/2"}, {"id": "1355769600370122752", "author_id": "310377054", "author_handle": "FaisalST32", "created_at": 1612097236.0, "favorite_count": 0, "full_text": "@JnBrymn Not search per se, but just because I was looking for a good react library template that day, doesn't mean that I have devoted my life to that search. My suggested repos have been only react library templates ever since."}, {"id": "1355768840597229569", "author_id": "923780763736211456", "author_handle": "ParzivalWolfram", "created_at": 1612097055.0, "favorite_count": 1, "full_text": "@JnBrymn On in-project searches, partial variable names often don't work unless it fully matches, even by case. Looking for vars in other people's code becomes a nightmare due to this, as you have to guess what the variable might be over and over to find it."}, {"id": "1355768539714473990", "author_id": "80404175", "author_handle": "BoyInDaBox89", "created_at": 1612096983.0, "favorite_count": 0, "full_text": "@JnBrymn Can we have GitHub search based on growth rate of Star, fork and watching features."}, {"id": "1355768496106459136", "author_id": "63377304", "author_handle": "OmarDuarte", "created_at": 1612096973.0, "favorite_count": 0, "full_text": "@JnBrymn @ajpinedam Exact phrase match. I use code search extensively to look for name of things across 1k company repositories."}, {"id": "1355767192684474368", "author_id": "91033862", "author_handle": "ocdtrekkie", "created_at": 1612096662.0, "favorite_count": 0, "full_text": "@JnBrymn I find the hardest thing to find on GitHub is the last commit a given file or folder existed in a repo. Hard to get the history for a file that no longer exists."}, {"id": "1355766181844512776", "author_id": "944845288807702528", "author_handle": "mmm_writes", "created_at": 1612096421.0, "favorite_count": 0, "full_text": "@JnBrymn If @ can fetch all the functions, it will be great."}, {"id": "1355763755674550272", "author_id": "14769640", "author_handle": "nathanwaters", "created_at": 1612095842.0, "favorite_count": 0, "full_text": "@JnBrymn Dependency search would be cool. eg... https://t.co/XMFqXMLZ1U"}, {"id": "1355763075438280711", "author_id": "215807286", "author_handle": "DonTAbrams", "created_at": 1612095680.0, "favorite_count": 0, "full_text": "@JnBrymn Use cases I\u2019ve had recently:\n* Report on all places where tracking events are emitted\n* Find where some hostname is used across multiple projects\n* Discover what parts of an API are used across multiple projects to estimate change cost\n* Find test(s) that tests this code path"}, {"id": "1355761113376415745", "author_id": "574404573", "author_handle": "uncivsheep", "created_at": 1612095212.0, "favorite_count": 0, "full_text": "@JnBrymn Make it like Helm. (as you type , it gives you a running list of files and line number where your search string appears). Then you could hit enter or click to go directly to that file and line. https://t.co/l3K5Vuuri4"}, {"id": "1355760883155279873", "author_id": "5466502", "author_handle": "mkashkin", "created_at": 1612095158.0, "favorite_count": 0, "full_text": "@JnBrymn Search through the history. It is very hard to find deprecated methods in the code. That change could makes work with legacy projects much simplier."}, {"id": "1355759763485831170", "author_id": "184192728", "author_handle": "Ph3bian", "created_at": 1612094891.0, "favorite_count": 2, "full_text": "@JnBrymn Filter result by years"}, {"id": "1355759053457281024", "author_id": "20706177", "author_handle": "sleepdefic1t", "created_at": 1612094721.0, "favorite_count": 1, "full_text": "@JnBrymn If I\u2019m searching from a forked repo, I\u2019m typically searching for results in that fork."}, {"id": "1355758281277517824", "author_id": "292737115", "author_handle": "treygrainger", "created_at": 1612094537.0, "favorite_count": 41, "full_text": "@JnBrymn Hey John 2 things that get me on a daily basis:\n1) Matches on file name should ALWAYS rank highest. Often there are first dozens of pages merely containing the class/term.\n2) Ability to search through branches other than main (or at least recently active ones with PRs to review)"}, {"id": "1355757861889040385", "author_id": "15820904", "author_handle": "visarga", "created_at": 1612094437.0, "favorite_count": 6, "full_text": "@JnBrymn @iamknighton Make finding code on Github less frustrating. Search by snippet, search by API, etc. Have you seen this? https://t.co/c62rpEzY3M"}, {"id": "1355756983496843265", "author_id": "838029131782766593", "author_handle": "JessicaMulein", "created_at": 1612094228.0, "favorite_count": 1, "full_text": "@JnBrymn Just out of curiosity, is latent semantic analysis being employed? How about ML?\nWould be curious to know if variable names and comments or even actual Intelligence about what the code might be capable of... And that last bit might get surprising?"}, {"id": "1355756409384620033", "author_id": "16562100", "author_handle": "jasonpeacock", "created_at": 1612094091.0, "favorite_count": 0, "full_text": "@JnBrymn Reverse this decision: https://t.co/7XvhuMfPlt You're making old projects invisible and not providing way to (re)discover them."}, {"id": "1355755937366224897", "author_id": "89877704", "author_handle": "alexbbt", "created_at": 1612093978.0, "favorite_count": 2, "full_text": "@JnBrymn @techgirl1908 Exact string matching, it\u2019s super annoying to know the exact sting I am looking for but have GitHub show me completely different stuff!"}, {"id": "1355753275799134212", "author_id": "408590540", "author_handle": "knavely", "created_at": 1612093344.0, "favorite_count": 3, "full_text": "@JnBrymn From just today: Reduce duplicate results from cloned repositories that have the same identical code. It\u2019s not what I\u2019m looking for yet it appears 50+ times before I see something different."}, {"id": "1355753076456480771", "author_id": "336108080", "author_handle": "deltreed", "created_at": 1612093296.0, "favorite_count": 3, "full_text": "@JnBrymn Archive projects should still show up in search results, not just on a google search."}, {"id": "1355752344877555713", "author_id": "37026770", "author_handle": "rodrigostweets", "created_at": 1612093122.0, "favorite_count": 1, "full_text": "@JnBrymn Searching in different branches; Better syntax matching"}, {"id": "1355752044511047680", "author_id": "13330372", "author_handle": "infolock", "created_at": 1612093050.0, "favorite_count": 2, "full_text": "@JnBrymn It would be nice to ORDER by date last modified.  Exact String match would be nice.   \n\nI mean - go to google, and look at their advanced search options.  pretty much everything listed there lol..."}, {"id": "1355751830928539652", "author_id": "977041888208330752", "author_handle": "hasen_judy", "created_at": 1612092999.0, "favorite_count": 8, "full_text": "@JnBrymn Let me specify the language without editing the url and without going to advanced search mode.\n\nLet me search for \"whole phrase\", and let me make the search case-sensitive.\n\nLet me exclude or include specific filename patterns.\n\nAgain, without going to advanced search."}, {"id": "1355750706032992258", "author_id": "15831927", "author_handle": "rjurney", "created_at": 1612092731.0, "favorite_count": 0, "full_text": "@JnBrymn Help me find what I want when I don't know the regex."}, {"id": "1355750690916884480", "author_id": "253899619", "author_handle": "Pertjensen", "created_at": 1612092728.0, "favorite_count": 1, "full_text": "@JnBrymn I'd like to know this: when you search for some code on #Github - do you have any tips or tricks to share?"}, {"id": "1355749584111329282", "author_id": "16814255", "author_handle": "albertbori", "created_at": 1612092464.0, "favorite_count": 1, "full_text": "@JnBrymn I\u2019m still not quite sure how to search for something within a specific commit... the global search at the top seems a bit weirdly scoped? Maybe two search bars are needed: Global at top, branch/commit-specific lower down?"}, {"id": "1355749233349980163", "author_id": "40288949", "author_handle": "kitsunde", "created_at": 1612092380.0, "favorite_count": 0, "full_text": "@JnBrymn It\u2019s in a lot of cases almost impossible to find uses of framework/library code, because of unit tests  docs and such in the project itself being included in hundreds of other projects.\n\nBeing able to find multiple matches in 1 document would help. I.e. lookup import and use."}, {"id": "1355749200345124864", "author_id": "14322989", "author_handle": "mwickett", "created_at": 1612092372.0, "favorite_count": 0, "full_text": "@JnBrymn Repo groups a la Sourcegraph."}, {"id": "1355749161434546184", "author_id": "1307343316623609857", "author_handle": "kindwindfall", "created_at": 1612092363.0, "favorite_count": 0, "full_text": "@JnBrymn whatever u do im sure itll be better than searching bitbucket"}, {"id": "1355748298464899075", "author_id": "776903881", "author_handle": "jp11235813", "created_at": 1612092157.0, "favorite_count": 0, "full_text": "@JnBrymn Use file import outport degrees to weight file suggestion order when searching code repos from an open file. Would be helpful for MERN apps at least."}, {"id": "1355747207715172353", "author_id": "1333965195065044992", "author_handle": "0x20cowboy", "created_at": 1612091897.0, "favorite_count": 0, "full_text": "@JnBrymn Please just separate the project search from repo search"}, {"id": "1355747123703255043", "author_id": "1267747292280479744", "author_handle": "GentlyLurk", "created_at": 1612091877.0, "favorite_count": 1, "full_text": "@JnBrymn Allow people to decide what is \"relevant / best match\" criteria.\n\nLess \"omnibox\", more https://t.co/R62I0i8TKw\n\nWhile we're on that page, every option would be nice (like within topic), as would collapsing sections.\n\nAbility to search only repo's that have tests.\n\nEtc."}, {"id": "1355746289456037894", "author_id": "13124352", "author_handle": "todd534", "created_at": 1612091678.0, "favorite_count": 2, "full_text": "@JnBrymn would be great if links from search results went to main/master (I'm assuming they go to the last indexed commit in case main has drifted?)"}, {"id": "1355746195491045378", "author_id": "28712421", "author_handle": "unclouded", "created_at": 1612091656.0, "favorite_count": 1, "full_text": "@JnBrymn Semantic search, particularly in statically-typed languages. Let me search for all functions that take an integer argument and returns a subtype of X. As an example."}, {"id": "1355744919151931394", "author_id": "1288978785291968514", "author_handle": "tgr_code", "created_at": 1612091351.0, "favorite_count": 0, "full_text": "@JnBrymn Allowing a checkbox of sorts to match the exact text rather than just the keywords"}, {"id": "1355743940209762311", "author_id": "420409358", "author_handle": "RealSwimburger", "created_at": 1612091118.0, "favorite_count": 2, "full_text": "@JnBrymn Sometimes I search for the exact class name I'm looking for, but I need to scroll through a whole bunch of pages to actually find the class declaration.\nIf class declarations could be bubbled up to the top, that'd be great."}, {"id": "1355741653328228353", "author_id": "21708416", "author_handle": "object88", "created_at": 1612090573.0, "favorite_count": 0, "full_text": "@JnBrymn Specify branch, tag, commit, or commit range to search.  It kills me to get a random commit from 2yrs ago that's no longer current."}, {"id": "1355739185982791683", "author_id": "37740370", "author_handle": "ChristosMatskas", "created_at": 1612089985.0, "favorite_count": 2, "full_text": "@JnBrymn Ability to exclude folders in a repo search. For example, don\u2019t search in /tests"}, {"id": "1355738295192399872", "author_id": "33788564", "author_handle": "mallyvai", "created_at": 1612089772.0, "favorite_count": 1, "full_text": "@JnBrymn Acquire Sourcegraph"}, {"id": "1355738235478159363", "author_id": "17944380", "author_handle": "JmlScrltt", "created_at": 1612089758.0, "favorite_count": 0, "full_text": "@JnBrymn Searching across multiple branches would be awesome."}, {"id": "1355737401050558471", "author_id": "14455784", "author_handle": "lostluck", "created_at": 1612089559.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll Ways to filter by exact text strings."}, {"id": "1355736531407921153", "author_id": "42560807", "author_handle": "LucianaVillanti", "created_at": 1612089352.0, "favorite_count": 0, "full_text": "@JnBrymn @_cubbit \ud83d\ude03\u2728"}, {"id": "1355736246132240386", "author_id": "27614577", "author_handle": "KageKirin", "created_at": 1612089284.0, "favorite_count": 1, "full_text": "@JnBrymn Evolution of functions over time,\nSearch in specific functions over the history.\n\nMight be specific but sometimes when looking for the origin of bugs, it\u2019s useful to know when they were added. And if the functions name didn\u2019t change, you have a starting point."}, {"id": "1355736169238028288", "author_id": "369469105", "author_handle": "SOLIS_Syd", "created_at": 1612089265.0, "favorite_count": 0, "full_text": "@JnBrymn Maybe people should put in adaquete and correct descriptions of their code and hoe to install it or make it work."}, {"id": "1355736001998585859", "author_id": "46849132", "author_handle": "sbditto85", "created_at": 1612089225.0, "favorite_count": 0, "full_text": "@JnBrymn I side the repo find thing similar to `git grep ` to many times I just pull the repo and run that instead of GitHub search"}, {"id": "1355735706971172868", "author_id": "905041434", "author_handle": "Alex_frm_Alaska", "created_at": 1612089155.0, "favorite_count": 0, "full_text": "@JnBrymn Somthing that's be nice for both code search and issue search is highlighting the special search criteria indicators, e.g. let me tab complete author: or by: or before: or mentions: sorta stuff"}, {"id": "1355734597120610304", "author_id": "230484436", "author_handle": "Gadaffi7", "created_at": 1612088890.0, "favorite_count": 0, "full_text": "@JnBrymn A newbie friendlier graphic interface with less clutter. Properly stringed links and better page titling. Some repositories scare me."}, {"id": "1355734539579097090", "author_id": "798126093576310785", "author_handle": "AlankarShukla2", "created_at": 1612088877.0, "favorite_count": 0, "full_text": "@JnBrymn Make it as Google search"}, {"id": "1355734502950252551", "author_id": "1254629151350444033", "author_handle": "aronMaurer", "created_at": 1612088868.0, "favorite_count": 0, "full_text": "@JnBrymn If you can scale the hound project up to handle github search, that's your best bet: https://t.co/YYt3HTeLOX. It's a few step changes ahead at the moment. Barring that, you desperately need a custom tokenizer to handle snake/camel/kebab case properly."}, {"id": "1355734501532389377", "author_id": "701571650", "author_handle": "sompylasar", "created_at": 1612088868.0, "favorite_count": 15, "full_text": "@JnBrymn 0. Do not ignore special characters in search queries (operators like parentheses, equal sign, plus, etc.) https://t.co/HLPob3iZ56\n\n1. Tangential to search: when browsing code, clicking an identifier or another whole word highlight every occurrence of this word in the file."}, {"id": "1355734418636349443", "author_id": "184146952", "author_handle": "solid_angle", "created_at": 1612088848.0, "favorite_count": 2, "full_text": "@JnBrymn @stevelatta1701 syntax aware exact matches, i.e. searching for \"class UObject :\" will match all sorts of whitespace and punctuation between 'class' and 'UObject' and more or less ignore the ':' in a C++ repository like UE4"}, {"id": "1355733561555480577", "author_id": "14376240", "author_handle": "rickyteachey", "created_at": 1612088644.0, "favorite_count": 0, "full_text": "@JnBrymn Make it so that I can find anything. I have no idea how to find.... Anything."}, {"id": "1355730895953604608", "author_id": "2438106311", "author_handle": "morethanpriors", "created_at": 1612088008.0, "favorite_count": 0, "full_text": "@JnBrymn Some form of grouping of users and forks to reduce duplication?"}, {"id": "1355730319769554946", "author_id": "16173372", "author_handle": "dezren39", "created_at": 1612087871.0, "favorite_count": 0, "full_text": "@JnBrymn your search is very frustrating, I'm sorry."}, {"id": "1355730260013142017", "author_id": "1497031", "author_handle": "pims", "created_at": 1612087856.0, "favorite_count": 0, "full_text": "@JnBrymn Dedupe forks. It is not useful to have pages and pages of the same exact code forked a million times. I want to see different results for my query."}, {"id": "1355730097274310657", "author_id": "4740330809", "author_handle": "Cretezy", "created_at": 1612087818.0, "favorite_count": 0, "full_text": "@JnBrymn Definitely making searching by file name (fuzzy possibly) much easier. Usually I'm looking up a specific file, to the read it's implementation, instead of searching for something inside the file itself (the unknown)"}, {"id": "1355729662404530180", "author_id": "16232330", "author_handle": "rockyMtnRajah", "created_at": 1612087714.0, "favorite_count": 0, "full_text": "@JnBrymn Within an account I wish I could search code across repos in that account. I regularly look for samples in microsoft's repos and find myself jumping between repos. Wish I could search all azure repos at once."}, {"id": "1355729592846327810", "author_id": "748359355444101120", "author_handle": "RussEntrol", "created_at": 1612087697.0, "favorite_count": 0, "full_text": "@JnBrymn When searching \"In this repository\"\nI'd like additional filters for:\nCode\nComments\nString literals"}, {"id": "1355729386780184578", "author_id": "36189731", "author_handle": "DrianHillman", "created_at": 1612087648.0, "favorite_count": 0, "full_text": "@JnBrymn \ud83d\udc4b\ud83c\udffd John,\n\nWould love to view the codebase at a specific date, and then still be able to search from that point in time."}, {"id": "1355729340172959750", "author_id": "23546908", "author_handle": "btashton", "created_at": 1612087637.0, "favorite_count": 17, "full_text": "@JnBrymn Implement https://t.co/5bkCneG1Rt that is 95% of how I do GitHub searching and it does an excellent job.  Biggest thing I use it for is looking for examples of how to use some API, so exact search of the function name and filter by language."}, {"id": "1355728872332013568", "author_id": "2363154198", "author_handle": "n_hackman", "created_at": 1612087526.0, "favorite_count": 1, "full_text": "@JnBrymn Searching for code that existed at some time but was potentially deleted. Thanks!"}, {"id": "1355727867204743169", "author_id": "1112458816690577410", "author_handle": "mari3842h", "created_at": 1612087286.0, "favorite_count": 0, "full_text": "@JnBrymn Allow searches in forked repositories"}, {"id": "1355727791317266433", "author_id": "275673898", "author_handle": "tayloramurphy", "created_at": 1612087268.0, "favorite_count": 1, "full_text": "@JnBrymn Well this blew up https://t.co/WpP0FsuNyY"}, {"id": "1355727420708556801", "author_id": "1221161", "author_handle": "skottk", "created_at": 1612087179.0, "favorite_count": 0, "full_text": "@JnBrymn Regexes."}, {"id": "1355727050791923712", "author_id": "14361083", "author_handle": "cafenoirdesign", "created_at": 1612087091.0, "favorite_count": 0, "full_text": "@JnBrymn Searching by branch"}, {"id": "1355726603490353153", "author_id": "86532802", "author_handle": "alec1a", "created_at": 1612086985.0, "favorite_count": 1, "full_text": "@JnBrymn The result order has people's 0 star toy projects or forks ahead of quality repos. If I want a good example, it's better to see something in heavy use and popular via stars weighing in with relevance which is a better proxy than nothing."}, {"id": "1355726535773184001", "author_id": "970723079126073344", "author_handle": "Mr_Jay_Pea", "created_at": 1612086968.0, "favorite_count": 0, "full_text": "@JnBrymn GitHub\u2019s iOS app doesn\u2019t offer any code search. I wish it did."}, {"id": "1355726478416044033", "author_id": "502297701", "author_handle": "asmeurer", "created_at": 1612086955.0, "favorite_count": 0, "full_text": "@JnBrymn Some way to show all results in a file, instead of just the first (?)\n\nAlso if the search term is a function name and you already know where that function is defined maybe surface that first."}, {"id": "1355726109686591496", "author_id": "14302601", "author_handle": "fourbadcats", "created_at": 1612086867.0, "favorite_count": 0, "full_text": "@JnBrymn let me search for: term1 near term2"}, {"id": "1355725829720973316", "author_id": "3334348505", "author_handle": "hairyhum_", "created_at": 1612086800.0, "favorite_count": 0, "full_text": "@JnBrymn Search exact match"}, {"id": "1355725741665767430", "author_id": "58370289", "author_handle": "justenwalker", "created_at": 1612086779.0, "favorite_count": 0, "full_text": "@JnBrymn Some kind of semantic search (like https://t.co/r1HDTbR9fL) would be ideal, but having a way for search to include special character so I could search for \"foo()\" exactly instead of \"foo\" would be a big improvement."}, {"id": "1355725286873161733", "author_id": "37078839", "author_handle": "fernst87", "created_at": 1612086671.0, "favorite_count": 0, "full_text": "@JnBrymn Search by filename or by file extension, please"}, {"id": "1355724874422112257", "author_id": "17671115", "author_handle": "mattpriour", "created_at": 1612086572.0, "favorite_count": 0, "full_text": "@JnBrymn @dotMorten Option to search across all branches"}, {"id": "1355724818142949378", "author_id": "60485143", "author_handle": "nespron", "created_at": 1612086559.0, "favorite_count": 0, "full_text": "@JnBrymn Honestly it\u2019s really good. I use it a lot and I always find the thing I\u2019m looking for. \n\n90 percent of the time, I use code search because user.licenseType contained a value I didn\u2019t expect, and I want to search the backend team\u2019s code to see how licenseType is made."}, {"id": "1355724218785267718", "author_id": "92396712", "author_handle": "_aaronackerman_", "created_at": 1612086416.0, "favorite_count": 2, "full_text": "@JnBrymn I want to be able to search an exact phrase, like google searching with quotes. I often want to search an open source repo for an error string and while it does come up in results it usually comes with a whole lot that I don\u2019t care about."}, {"id": "1355723995128225802", "author_id": "15416702", "author_handle": "HenkPoley", "created_at": 1612086363.0, "favorite_count": 1, "full_text": "@JnBrymn Pick a random source file from GitHub. Try to find it through snippets of its code. Improve search engine until it works.\n\nTry to find it by its filename (\ud83e\udd37\u200d\u2642\ufe0f\ud83e\udd26\u200d\u2642\ufe0f).\n\nIf things can get fancy, maybe something akin to JetBrains structural search."}, {"id": "1355723897317056512", "author_id": "10293122", "author_handle": "joshuaclayton", "created_at": 1612086339.0, "favorite_count": 4, "full_text": "@JnBrymn Exact match, for starters. As a bonus, removing/hiding by default results that are actually external packages/dependencies that got pulled in"}, {"id": "1355723804698439681", "author_id": "1271151792777310216", "author_handle": "samismx", "created_at": 1612086317.0, "favorite_count": 0, "full_text": "@JnBrymn Show the nearest method signature / parent namespace construct in code change sets."}, {"id": "1355723647340736516", "author_id": "94679213", "author_handle": "alina967", "created_at": 1612086280.0, "favorite_count": 0, "full_text": "@JnBrymn When I search save my past search, so I can go back to the right away"}, {"id": "1355722576681709569", "author_id": "625745085", "author_handle": "GarvinCasimir", "created_at": 1612086025.0, "favorite_count": 0, "full_text": "@JnBrymn I am usually searching for how it is coded \u201cnow\u201d. It would be nice if the results show the latest version that includes my search term."}, {"id": "1355722265363668992", "author_id": "9648292", "author_handle": "coreyward", "created_at": 1612085950.0, "favorite_count": 1, "full_text": "@JnBrymn - Search code before the current commit\n- Search other branches\n- Case sensitive option\n- Scope to a subpackage in a monorepo (same for Issues \ud83d\ude4f)\n- Include file names in the search"}, {"id": "1355722008462553090", "author_id": "4847983992", "author_handle": "Quigley_Ja", "created_at": 1612085889.0, "favorite_count": 0, "full_text": "@JnBrymn Special characters! If I search for \u201cthing: myType\u201d I\u2019m looking for literally thing followed by colon space mytype. Not any file where thing or myType shows up"}, {"id": "1355721986408779776", "author_id": "17802814", "author_handle": "ccpost", "created_at": 1612085884.0, "favorite_count": 16, "full_text": "@JnBrymn Exact string matching is my top desire. I'd like to be able to search for things like \"https://t.co/fbvsl2Oy2w\" without getting all the results for \"Foo\" and \"Bar\" on their own."}, {"id": "1355721663820652544", "author_id": "242481514", "author_handle": "diwidog", "created_at": 1612085807.0, "favorite_count": 0, "full_text": "@JnBrymn code search working for forked repos"}, {"id": "1355721403572518912", "author_id": "18071073", "author_handle": "ajsharp", "created_at": 1612085745.0, "favorite_count": 1, "full_text": "@JnBrymn God give this man the strength to sort through the scatter plot of replies"}, {"id": "1355721358068486144", "author_id": "82213118", "author_handle": "DavidAns", "created_at": 1612085734.0, "favorite_count": 0, "full_text": "@JnBrymn @dotMorten Support this scenario without needing Google BigQuery, please?\n\nhttps://t.co/yzIjZ4YPCF"}, {"id": "1355721005902168065", "author_id": "2424451885", "author_handle": "eyelidlessness", "created_at": 1612085650.0, "favorite_count": 0, "full_text": "@JnBrymn I don't mean this unkindly, but... actually finding all results. I've searched identifiers in repos I maintain and even lead and found drastically fewer results than I knew should show up."}, {"id": "1355720272192671751", "author_id": "1658829246", "author_handle": "danijarh", "created_at": 1612085475.0, "favorite_count": 4, "full_text": "@JnBrymn Not sure if that falls under your responsibilities but I'd love a way to search private gists by filenames and content"}, {"id": "1355720142378905603", "author_id": "17220593", "author_handle": "robxu9", "created_at": 1612085444.0, "favorite_count": 0, "full_text": "@JnBrymn If we're searching for a specific string and we know what sort of type it is, it might be good to be able to filter on the type of syntax it is. (i.e. class names in Java, or struct fields in go, etc)\n\nAlso, declarations/references/etc."}, {"id": "1355720091371925510", "author_id": "18172649", "author_handle": "asimjalis", "created_at": 1612085432.0, "favorite_count": 0, "full_text": "@JnBrymn It would be nice to click on a class name in Java and navigate to where it is defined in the project."}, {"id": "1355719302335369217", "author_id": "2518564388", "author_handle": "cwharris", "created_at": 1612085244.0, "favorite_count": 2, "full_text": "@JnBrymn @tomekdrabas exact string match"}, {"id": "1355719285163888642", "author_id": "14380188", "author_handle": "chbrown", "created_at": 1612085240.0, "favorite_count": 0, "full_text": "@JnBrymn Deduplication. (Yes, I realize several people have already said this. Yes, I realize saying it again is a bit on the nose.)"}, {"id": "1355718954245828609", "author_id": "1051911420189667328", "author_handle": "Thomson_Comer", "created_at": 1612085161.0, "favorite_count": 0, "full_text": "@JnBrymn Fuzzy search, with suggestions and matching similar terms. I don't know exactly what I am searching for, but the final solution is going to be close. This is a delightful can of worms."}, {"id": "1355718899333955588", "author_id": "19038361", "author_handle": "niieani", "created_at": 1612085148.0, "favorite_count": 1, "full_text": "@JnBrymn @sseraphini Top things for me:\n- filtering results in test files/by regexp\n- exact matching more that includes punctuation/brackets\n- including results from history (or at least from all active branches), not only main branch"}, {"id": "1355718108493750275", "author_id": "29629728", "author_handle": "hvaoc", "created_at": 1612084959.0, "favorite_count": 0, "full_text": "@JnBrymn Show code that I am yet to write on the search results will be very useful. \ud83d\ude0e"}, {"id": "1355717997499805702", "author_id": "9632312", "author_handle": "ted_dunning", "created_at": 1612084933.0, "favorite_count": 3, "full_text": "@JnBrymn Enable the capabilities described in these link. \n\nIt would be great to find dead dependencies or highlight  diamond dependencies or how to do large-scale migrations.\n\nThe security bot was a great step. Would love to see more.\n\nhttps://t.co/UMQNBkaKWn\n\nhttps://t.co/dbkHzEN52b"}, {"id": "1355717711448350721", "author_id": "1232748174437040133", "author_handle": "nickjsheriff", "created_at": 1612084865.0, "favorite_count": 2, "full_text": "@JnBrymn Hey John I\u2019d love to see the ability to filter results that include a visual preview/prototype, making search results more visual, allows one to gauge if this is the right code for your needs, in 5 sec and is much more efficient then what exists now. \ud83d\udc4d\ud83c\udffe"}, {"id": "1355717701864484864", "author_id": "15010206", "author_handle": "ardentra", "created_at": 1612084862.0, "favorite_count": 1, "full_text": "@JnBrymn Where to start... I often search for string I know is in the code base yet find no hits. It just doesn't work at all..."}, {"id": "1355717571270463489", "author_id": "17003162", "author_handle": "dotMorten", "created_at": 1612084831.0, "favorite_count": 35, "full_text": "@JnBrymn @LyalinDotCom drive me nuts that it splits multiple terms into OR. Impossible to find combo of words. Or if it's code it splits by decimal point like \"class.method\" is impossible to search for.\nAnd I want to be able to search code in branches, or for deleted code"}, {"id": "1355717536927641601", "author_id": "252354727", "author_handle": "NotMedic", "created_at": 1612084823.0, "favorite_count": 3, "full_text": "@JnBrymn @TruBluDevil I\u2019d like to be able of search for a specific include statement, like:\n#include &lt;windows.h&gt;\n\nIt seems like the current search isn\u2019t capable of this, but it may also be user error."}, {"id": "1355717511057002498", "author_id": "7637292", "author_handle": "sytelus", "created_at": 1612084817.0, "favorite_count": 3, "full_text": "@JnBrymn Just better de-dup your results and they will be 100X more useful. Current results shows same code from thousand repos thousand times and you have to go to like page 10 to find something different. This is despite so you having all the information on forks etc."}, {"id": "1355717268185837570", "author_id": "16781974", "author_handle": "kmett", "created_at": 1612084759.0, "favorite_count": 34, "full_text": "@JnBrymn When I want to find an exact multi-word substring at times, or case sensitively search, I must pull the repo and grep now.\n\nAlso a way to privilege actual code over test directories, to skip mentions in comments, semantic search that bypasses forward declarations in C++..."}, {"id": "1355717070160322560", "author_id": "41435950", "author_handle": "jimhester_", "created_at": 1612084712.0, "favorite_count": 7, "full_text": "@JnBrymn index single letter words, right now your can't search for them, even if they are pay of a quoted search term"}, {"id": "1355716897795407873", "author_id": "10886832", "author_handle": "jperras", "created_at": 1612084671.0, "favorite_count": 1, "full_text": "@JnBrymn The ability to search and filter results by named branch and tag!"}, {"id": "1355716424736493573", "author_id": "17203692", "author_handle": "jxnlco", "created_at": 1612084558.0, "favorite_count": 0, "full_text": "@JnBrymn i would love some small things\n\n1. in an org, look at the usage of a function by who uses it the most (so i can ask them question as a user or as a developer) \n2. search a func along with a keyword so I can see how that keyword is often used."}, {"id": "1355716398882856961", "author_id": "27048570", "author_handle": "c_lemp", "created_at": 1612084552.0, "favorite_count": 0, "full_text": "@JnBrymn I search a lot of SQL and often it\u2019s to identify which schemas and tables where used for past, similar projects. If all the \u201cFROM schema.table\u201d statements within a repo could be quickly listed my \u201cdiscovery phase\u201d workflow would be much faster"}, {"id": "1355716190681903104", "author_id": "89552222", "author_handle": "CortRudolph", "created_at": 1612084502.0, "favorite_count": 0, "full_text": "@JnBrymn Honestly, the ability to sort repos (e.g., by name) would solve 99% of my \u201ccode search\u201d problems."}, {"id": "1355715009943318536", "author_id": "322117525", "author_handle": "bossylobster", "created_at": 1612084220.0, "favorite_count": 1, "full_text": "@JnBrymn I just want to run `git grep` at a target SHA/branch/tag (though usually it's just `HEAD` in the default branch)"}, {"id": "1355713426446815234", "author_id": "14632821", "author_handle": "ecsalomon", "created_at": 1612083843.0, "favorite_count": 0, "full_text": "@JnBrymn Exclude (or search exclusively in) comments"}, {"id": "1355712114455760900", "author_id": "13851502", "author_handle": "the_arun", "created_at": 1612083530.0, "favorite_count": 0, "full_text": "@JnBrymn Could we open search modal on Command/Ctrl+F, similar to Stripe?"}, {"id": "1355710696210751488", "author_id": "16185731", "author_handle": "rgov", "created_at": 1612083192.0, "favorite_count": 0, "full_text": "@JnBrymn Seems like we can search within a forked project now, which is a great improvement.\n\nOften when I'm trying to search all of GitHub for an example of how to use an API, I just get thousands of copies of the exact same file which has just been uploaded a zillion times."}, {"id": "1355709768845979655", "author_id": "35765968", "author_handle": "mattrpav", "created_at": 1612082971.0, "favorite_count": 0, "full_text": "@JnBrymn Filter by type\u2014 variable, class, file name etc"}, {"id": "1355709428817821700", "author_id": "41165883", "author_handle": "JustinBeckwith", "created_at": 1612082890.0, "favorite_count": 1, "full_text": "@JnBrymn Thank you for building amazing things!  Just yesterday, I needed to do an OR in issue search with labels.  I want anything labeled 'bug' OR 'enhancement' for example."}, {"id": "1355708282040700928", "author_id": "823083", "author_handle": "migueldeicaza", "created_at": 1612082616.0, "favorite_count": 24, "full_text": "@JnBrymn @robotdad Ability to filter duplicates, or sort by most comitted to"}, {"id": "1355707999038435331", "author_id": "1039628606622715904", "author_handle": "codename_dana", "created_at": 1612082549.0, "favorite_count": 1, "full_text": "@JnBrymn @kateisk8iskate Being able to see more than 2 matches per file would be great"}, {"id": "1355707611434258436", "author_id": "1227721820637290498", "author_handle": "Fall3Free", "created_at": 1612082457.0, "favorite_count": 0, "full_text": "@JnBrymn REGEX as an OPTION please!"}, {"id": "1355707463803277312", "author_id": "727704217012604928", "author_handle": "acemarke", "created_at": 1612082421.0, "favorite_count": 22, "full_text": "@JnBrymn Would be great to do somehow do something of a \"find references\" across the entire site. For example, I want to find uses of `createSlice` from `@reduxjs/toolkit` .\n\nAlso, need ways to exclude obvious dupe results, like typedef files that got copied and committed in many repos."}, {"id": "1355707408241225731", "author_id": "1227721820637290498", "author_handle": "Fall3Free", "created_at": 1612082408.0, "favorite_count": 0, "full_text": "@JnBrymn I have hated GH search since the beginning, please allow \"git grep\" style searches, even if it's a toggle away (it probably shouldn't be default)."}, {"id": "1355706842085658625", "author_id": "179829268", "author_handle": "Goodwine", "created_at": 1612082273.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll Something like sourcegraph or GCP code search"}, {"id": "1355706534886432777", "author_id": "3852971", "author_handle": "broady", "created_at": 1612082200.0, "favorite_count": 0, "full_text": "@JnBrymn being able to search for string literals is a basic missing feature of GitHub search"}, {"id": "1355706498760859650", "author_id": "1876440174", "author_handle": "lzybkr", "created_at": 1612082191.0, "favorite_count": 2, "full_text": "@JnBrymn Ignore forks by default. Too many dupes. Also support search on def vs use. Not usually useful to see C decls/ffi/pinvoke decls."}, {"id": "1355706271207366656", "author_id": "7692742", "author_handle": "devpostor", "created_at": 1612082137.0, "favorite_count": 0, "full_text": "@JnBrymn Pattern matching for include / exclude directories. For instance, exclude: */test/* for Java repos would be amazing."}, {"id": "1355705601943162881", "author_id": "18017251", "author_handle": "soheilpro", "created_at": 1612081977.0, "favorite_count": 1, "full_text": "@JnBrymn Option to exclude tests from the results."}, {"id": "1355705041215229953", "author_id": "1050076423078187008", "author_handle": "jaozerazv", "created_at": 1612081844.0, "favorite_count": 0, "full_text": "@JnBrymn search by words on files like vscode search"}, {"id": "1355704617632317441", "author_id": "2673923562", "author_handle": "GeraldVenzl", "created_at": 1612081743.0, "favorite_count": 2, "full_text": "@JnBrymn @rakyll Being able to filter out the test files. Sometimes when I look for a function name I will get many more results in folders called \u201ctest/...\u201d. Would be cool if GH recognizes standard folder structures (e.g. Java Maven project) and allows you a faceted search over that."}, {"id": "1355704451131031558", "author_id": "768197780", "author_handle": "jakevdp", "created_at": 1612081703.0, "favorite_count": 166, "full_text": "@JnBrymn My #1 request would be the ability to search for non-alphanumeric characters. Searching for \"func()\" returns the same thing as searching for \"func\", which makes the tool far less useful than it could be."}, {"id": "1355703338038415360", "author_id": "3031883896", "author_handle": "RobertBMenke", "created_at": 1612081438.0, "favorite_count": 0, "full_text": "@JnBrymn The closer you can get to intellij's search experience the better. My #1 pain point is being taken away from what I'm looking at while coding. I realize this is likely very difficult with GH's current model."}, {"id": "1355702880741642246", "author_id": "259916759", "author_handle": "ScatteredRay", "created_at": 1612081329.0, "favorite_count": 1, "full_text": "@JnBrymn Search specific subtrees of repos and/or filtering files by extension/path/etc"}, {"id": "1355702756133236738", "author_id": "186089090", "author_handle": "AustinZHenley", "created_at": 1612081299.0, "favorite_count": 5, "full_text": "@JnBrymn I want to search for AST subgraph patterns. (My research group has a prototype working already though!)"}, {"id": "1355702068049190914", "author_id": "2886", "author_handle": "davidvasandani", "created_at": 1612081135.0, "favorite_count": 0, "full_text": "@JnBrymn Let me search my fork."}, {"id": "1355701681271398400", "author_id": "43669165", "author_handle": "johndpope", "created_at": 1612081043.0, "favorite_count": 0, "full_text": "@JnBrymn The way the default search works (doesn\u2019t work when you\u2019re on a fork) - urghhh drive me nuts. Do you have any metrics to show you zero results found across system ? Why not just show / default search to the main repo? (I have more suggestions.)"}, {"id": "1355701430233956354", "author_id": "32885250", "author_handle": "nazieb", "created_at": 1612080983.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll search on a specific branch"}, {"id": "1355700719601541120", "author_id": "17828714", "author_handle": "btskinn", "created_at": 1612080813.0, "favorite_count": 111, "full_text": "@JnBrymn EXACT STRING MATCHING.\n\nGood Lord, but it's frustrating to search for 'foo-bar' and end up with a haystack of 3000 results with \"foo\" and 2500 with \"bar\", within which I must search for the 'needle', the three hits with \"foo-bar\"."}, {"id": "1355700686596530177", "author_id": "11995432", "author_handle": "zitterbewegung", "created_at": 1612080806.0, "favorite_count": 0, "full_text": "@JnBrymn If a search has zero results then automatically show the alternatives sorted by the best to the worst."}, {"id": "1355700211251867649", "author_id": "14082200", "author_handle": "reconbot", "created_at": 1612080692.0, "favorite_count": 4, "full_text": "@JnBrymn Regular expression matching (or something close) for code and file names"}, {"id": "1355699929365110785", "author_id": "1087308269113077760", "author_handle": "omidp17", "created_at": 1612080625.0, "favorite_count": 2, "full_text": "@JnBrymn I would love to be able to search a specific file inside a specific folder when I am inside that folder in the repo. e.g search https://t.co/tjR7ffgYIJ inside /common \nalso the sort / ordering when I search https://t.co/tjR7ffgYIJ it should be first item in the list not in page 2"}, {"id": "1355699647470317572", "author_id": "14082200", "author_handle": "reconbot", "created_at": 1612080558.0, "favorite_count": 5, "full_text": "@JnBrymn Global search and code search maybe shouldn\u2019t be the same thing? The want a repo that does X and find me my code that provides method y are vastly different things."}, {"id": "1355697691234168832", "author_id": "287313124", "author_handle": "VladAIonescu", "created_at": 1612080091.0, "favorite_count": 2, "full_text": "@JnBrymn Regex search for filename and/or file contents. Control case sensitivity / whole word match - just like in an IDE.\n\nSearch by variable name / class name / object name / property name.\n\nThanks for making it better! \u2764\ufe0f"}, {"id": "1355697554428743680", "author_id": "534421496", "author_handle": "DavidGlaude", "created_at": 1612080059.0, "favorite_count": 0, "full_text": "@JnBrymn Search on fork!\nLike @CircuitPython that stay a fork of @micropython but is so different that we need search.\nPlease identify big fork!"}, {"id": "1355697029905715205", "author_id": "18148120", "author_handle": "shirleman", "created_at": 1612079934.0, "favorite_count": 0, "full_text": "@JnBrymn I have so many thoughts on this when I actually attempt it. The boolean operators seemed to be broken the last time I tried to use it for anything.\n\nOne MASSIVE feature would be to offer some small set of repository owners the ability to see if someone has follows a lot of sub"}, {"id": "1355695597710438403", "author_id": "222875633", "author_handle": "RobertWPearce", "created_at": 1612079592.0, "favorite_count": 0, "full_text": "@JnBrymn Exact matches, especially including symbols like parentheses, braces, arrows, etc"}, {"id": "1355695342964989955", "author_id": "14391837", "author_handle": "jstangroome", "created_at": 1612079532.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll Search on release-tagged branches, not just main branch."}, {"id": "1355695027888869379", "author_id": "2244585577", "author_handle": "bagmangood", "created_at": 1612079456.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll specific text search - I'm often looking for explicit matches and get back a lot of fuzzy matches as well (particularly if looking for URL paths)"}, {"id": "1355694730818908161", "author_id": "7894802", "author_handle": "leowhiterussian", "created_at": 1612079386.0, "favorite_count": 0, "full_text": "@JnBrymn I mean like literally anything. I just want to basically grep code for something, or even just find a file by name... I'm sure I'm going to be told its possible with some keyword... The default should be useful."}, {"id": "1355694584010072067", "author_id": "393038334", "author_handle": "Graham__Duncan", "created_at": 1612079351.0, "favorite_count": 29, "full_text": "@JnBrymn Maybe a \"jump to documentation\" option when searching for a specific method / function. PyCharm has something like this and it's really wonderful. Obviously they are an IDE and thus a slightly different use-case / feature suite than Github, but would love to see on GitHub too! https://t.co/vcMcpBbgHd"}, {"id": "1355693682637340675", "author_id": "550643609", "author_handle": "stevebot", "created_at": 1612079136.0, "favorite_count": 2, "full_text": "@JnBrymn The UX is my only issue. I can't remember the names for the fields and end up clicking on advanced search every time. If the search box gave me suggestions or auto-completed that would be a big improvement in my eyes."}, {"id": "1355693266843299840", "author_id": "49555459", "author_handle": "tannewt", "created_at": 1612079037.0, "favorite_count": 10, "full_text": "@JnBrymn Being able to search a fork!"}, {"id": "1355692351432351747", "author_id": "66351897", "author_handle": "alexwlchan", "created_at": 1612078818.0, "favorite_count": 0, "full_text": "@JnBrymn An option to exclude archived repositories from search.\n\nWe have several cases where a repo was deprecated or subsumed into another repo, and it\u2019d be nice if results from the archived repo weren\u2019t in the search results."}, {"id": "1355692082963296263", "author_id": "393038334", "author_handle": "Graham__Duncan", "created_at": 1612078754.0, "favorite_count": 16, "full_text": "@JnBrymn something like \"People also searched for\" when on a repo's home page (perhaps if you got there via the search interface) https://t.co/WwJh0H9a3W"}, {"id": "1355691791689760777", "author_id": "756095166", "author_handle": "Joelbdenning", "created_at": 1612078685.0, "favorite_count": 3, "full_text": "@JnBrymn Specify branch to search on"}, {"id": "1355691145498664962", "author_id": "393038334", "author_handle": "Graham__Duncan", "created_at": 1612078531.0, "favorite_count": 7, "full_text": "@JnBrymn Idk how difficult this would be but maybe enabling sub-language filtering criteria. E.g. filter python2 results or filter projects (which include requirements.txt file) with dependencies &gt;= 1.0 (or whatever your threshold)."}, {"id": "1355690780329914372", "author_id": "11961202", "author_handle": "mscottford", "created_at": 1612078444.0, "favorite_count": 0, "full_text": "@JnBrymn A frequent thing I find myself wanting to do: \n\nFind repositories that contain a file named \u201cX\u201d. Even better, add the ability to filter based on number of times that file has changed. (Helps filter out projects that just contain an initial commit.)"}, {"id": "1355690261528117255", "author_id": "393038334", "author_handle": "Graham__Duncan", "created_at": 1612078320.0, "favorite_count": 2, "full_text": "@JnBrymn Hi John \ud83d\udc4b,\n \nfirst thank you for your work on code search -- I use this functionality near daily and it has a massive impact on the quality of my work and life \ud83d\ude03 \n\nRequest: allow for a search keyword / shortcut parameter for indicating the result sort direction on gist search https://t.co/lwN53rJXS2"}, {"id": "1355688673417650179", "author_id": "9706142", "author_handle": "rifat", "created_at": 1612077941.0, "favorite_count": 1, "full_text": "@JnBrymn Ability to search a forked repo."}, {"id": "1355688009375469571", "author_id": "3948751", "author_handle": "thermistor", "created_at": 1612077783.0, "favorite_count": 0, "full_text": "@JnBrymn @NeilKNet When repos are forked and original becomes moribund the fork can become the canonical version that people rely on. However they are sometimes difficult to find through GH search. Eg. look for the ruby gems 'delayed_job' or 'railroady', to find proper version search via rubygems"}, {"id": "1355687343747960832", "author_id": "502916683", "author_handle": "EleonoreMayola", "created_at": 1612077624.0, "favorite_count": 2, "full_text": "@JnBrymn 1) User wants to search for code containing punctuation like: \"{ foo\"\n\n2) User wants to search for multiple criteria like: \"foo\" + \"bar\""}, {"id": "1355685731461517313", "author_id": "787741", "author_handle": "sporkmonger", "created_at": 1612077240.0, "favorite_count": 2, "full_text": "@JnBrymn Less ICE."}, {"id": "1355683806934655089", "author_id": "806575", "author_handle": "wheresrhys", "created_at": 1612076781.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll Link to default branch not the commit. I almost always want to end up exploring the code on default branch"}, {"id": "1355683202233479170", "author_id": "722557924011184128", "author_handle": "sethmlarson", "created_at": 1612076637.0, "favorite_count": 7, "full_text": "@JnBrymn Add a mode for exact matches, especially for symbols."}, {"id": "1355683117424549888", "author_id": "20815648", "author_handle": "ryanglasgow", "created_at": 1612076617.0, "favorite_count": 0, "full_text": "@JnBrymn @chrismessina Asking on Twitter will give you a biased sample :) Have you checked out @userleap where you can ask this question within your  product, when someone is using code search?"}, {"id": "1355682345953714176", "author_id": "5674722", "author_handle": "dims", "created_at": 1612076433.0, "favorite_count": 10, "full_text": "@JnBrymn @rakyll @JnBrymn I maintain the https://t.co/VogFrEVfXM (houndd instance) for searching Kubernetes repos and use https://t.co/zEYFWDyhFC all the time. Would love to see GH search get better!"}, {"id": "1355682043271766019", "author_id": "603639924", "author_handle": "GunnerMcGrath", "created_at": 1612076361.0, "favorite_count": 1, "full_text": "@JnBrymn @techgirl1908 Sometimes I just want to search for a file name so I don't have to dig into the tree manually to find it. But typing into the search box finds all references to that text and the fine I want is rarely high in the results."}, {"id": "1355681533210877955", "author_id": "14137234", "author_handle": "nickemccurdy", "created_at": 1612076239.0, "favorite_count": 0, "full_text": "@JnBrymn This is quite a stretch goal but having something like Hoogle\u2019s type aware search engine for something like TypeScript would be awesome. Or even just plain old API based search, without type algebra."}, {"id": "1355680255919280128", "author_id": "629200206", "author_handle": "HaroldFredShort", "created_at": 1612075934.0, "favorite_count": 4, "full_text": "@JnBrymn @techgirl1908 My org has hundreds of private repos. We usually use Sourcegraph instead of GitHub search because it is so much better at finding things. Special characters is part of it, but haven't catalogued all the differences that make it better."}, {"id": "1355678894385491970", "author_id": "23587474", "author_handle": "evntdrvn", "created_at": 1612075610.0, "favorite_count": 1, "full_text": "@JnBrymn literal match queries please, for the love of all things good and holy \ud83d\ude4f\ud83c\udffb"}, {"id": "1355678421821632517", "author_id": "42350309", "author_handle": "stordahl_", "created_at": 1612075497.0, "favorite_count": 2, "full_text": "@JnBrymn @techgirl1908 I greatly dislike that search defaults to searching the current repo I\u2019m in. Search all GitHub should be the default imho!"}, {"id": "1355678017893265410", "author_id": "17333065", "author_handle": "CassidyJames", "created_at": 1612075401.0, "favorite_count": 9, "full_text": "@JnBrymn Searching forked repos. Some forks are essentially their own entire codebase at this point, and not being able to search within forks has bitten me more than once."}, {"id": "1355677619715379200", "author_id": "14166206", "author_handle": "matthelm", "created_at": 1612075306.0, "favorite_count": 0, "full_text": "@JnBrymn Searching a method/attribute in Rails projects has the test directories listed first, whereas I\u2019m typically looking for the implementation"}, {"id": "1355677472059228161", "author_id": "17609423", "author_handle": "timkevinoxley", "created_at": 1612075271.0, "favorite_count": 2, "full_text": "@JnBrymn Also being able to filter by directory, annoying trying to find where something is used or defined and having to wade through 10 pages of results in tests before you even find anything in a src directory."}, {"id": "1355677219566268419", "author_id": "25023268", "author_handle": "crossan007", "created_at": 1612075211.0, "favorite_count": 1, "full_text": "@JnBrymn Empty \"catch\" blocks."}, {"id": "1355676651036831744", "author_id": "186563559", "author_handle": "vadimkantorov", "created_at": 1612075075.0, "favorite_count": 0, "full_text": "@JnBrymn Better, more semantic ranking! I'm often searching for class name or function name and expect the definition come up as top hit. Currently usages score higher."}, {"id": "1355676647261839363", "author_id": "5697222", "author_handle": "sophiebits", "created_at": 1612075074.0, "favorite_count": 6, "full_text": "@JnBrymn My feedback, if you haven\u2019t read it https://t.co/l5Ub1xRGrm"}, {"id": "1355676325638508547", "author_id": "9887102", "author_handle": "metaskills", "created_at": 1612074997.0, "favorite_count": 6, "full_text": "@JnBrymn Strict literal strings. Maybe by using quoted strings or something."}, {"id": "1355676223012098050", "author_id": "522575440", "author_handle": "deconstructized", "created_at": 1612074973.0, "favorite_count": 6, "full_text": "@JnBrymn acquire @srcgraph and pay more $ to the PhDs who make type inference for dynamic languages usable.\n\nAlso pls get rid of your ICE contracts and nazi employees"}, {"id": "1355675941482205185", "author_id": "326355559", "author_handle": "troydcthompson", "created_at": 1612074906.0, "favorite_count": 0, "full_text": "@JnBrymn @techgirl1908 Defaulting to in repo seems good but often isn\u2019t what I\u2019m searching for. I\u2019d like a search more like google at the top and an in repo search inside the code tab"}, {"id": "1355675914152112132", "author_id": "91079125", "author_handle": "vvshashank", "created_at": 1612074899.0, "favorite_count": 0, "full_text": "@JnBrymn An option to select the branch to search on which can default to master if the given branch doesn't exist."}, {"id": "1355675837899522049", "author_id": "815031", "author_handle": "cscotta", "created_at": 1612074881.0, "favorite_count": 71, "full_text": "@JnBrymn @rustyrazorblade When searching for the name of a class or method, it\u2019d be amazing for this to appear as the first result. In practice class/method definitions tend to show up after several pages of references to them. (Java, GHE)."}, {"id": "1355675150432292872", "author_id": "16123715", "author_handle": "gmonteith", "created_at": 1612074717.0, "favorite_count": 0, "full_text": "@JnBrymn @techgirl1908 Autocomplete file names"}, {"id": "1355674982148403210", "author_id": "2580945055", "author_handle": "brdskggs", "created_at": 1612074677.0, "favorite_count": 4, "full_text": "@JnBrymn When I search for a function name, I almost always want the definition, not tests that use the function.  Could you figure out heuristics to prioritize the definition above tests?"}, {"id": "1355674540475605002", "author_id": "1541641", "author_handle": "toomuchpete", "created_at": 1612074572.0, "favorite_count": 10, "full_text": "@JnBrymn @techgirl1908 Search commit diffs. (As in find me commits in which the search text was included in a changed line)"}, {"id": "1355674213852585984", "author_id": "29065034", "author_handle": "franciscosouza", "created_at": 1612074494.0, "favorite_count": 2, "full_text": "@JnBrymn @techgirl1908 Acquire sourcegraph"}, {"id": "1355674167761367044", "author_id": "12402702", "author_handle": "MutableBall", "created_at": 1612074483.0, "favorite_count": 3, "full_text": "@JnBrymn @techgirl1908 Lemme search the git commits as well as the code."}, {"id": "1355673807755870214", "author_id": "2464553708", "author_handle": "segoldma", "created_at": 1612074397.0, "favorite_count": 1, "full_text": "@JnBrymn I often think that the default scope of the search from your own profile page would be on files within your owned repos, rather than a global search"}, {"id": "1355673642789609473", "author_id": "11280732", "author_handle": "sureshsk", "created_at": 1612074358.0, "favorite_count": 1, "full_text": "@JnBrymn @rakyll Filter by commit dates, committer may be something helpful. I tend to search this way often."}, {"id": "1355673563211042817", "author_id": "337454885", "author_handle": "_Brantone", "created_at": 1612074339.0, "favorite_count": 2, "full_text": "@JnBrymn @rakyll Regex support."}, {"id": "1355673137610952706", "author_id": "14154963", "author_handle": "matiasbaldanza", "created_at": 1612074237.0, "favorite_count": 5, "full_text": "@JnBrymn @techgirl1908 I usually end up grepping a local repo. It's faster.\n\nLong-term: I want the powers of grep and regular expressions but in a nice UI.\n\nShort-term: granular scopes. \nPunctuation literals in search."}, {"id": "1355672770022137858", "author_id": "3290125930", "author_handle": "SaukkonenVille", "created_at": 1612074150.0, "favorite_count": 1, "full_text": "@JnBrymn @sseraphini I'd like to be able to search with exact syntax, but maybe excluding whitespaces etc. No it's impossible to find anything by just pasting the code."}, {"id": "1355672149948821505", "author_id": "202199859", "author_handle": "punkeel", "created_at": 1612074002.0, "favorite_count": 0, "full_text": "@JnBrymn Exclude bots from Issues search"}, {"id": "1355671977822830592", "author_id": "16324730", "author_handle": "illegible", "created_at": 1612073961.0, "favorite_count": 14, "full_text": "@JnBrymn @rakyll Getting N,000 results that are all the same line of code from the same file from a heavily forked or vendored project really hampers the product today.\n\nBigger dreams: re2 searches over code. I miss Google CodeSearch so much. What a tremendous loss."}, {"id": "1355671834193260546", "author_id": "19688959", "author_handle": "ryber", "created_at": 1612073927.0, "favorite_count": 2, "full_text": "@JnBrymn @techgirl1908 Case sensitivity"}, {"id": "1355671736298184706", "author_id": "11623", "author_handle": "jof", "created_at": 1612073903.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll Literal substring searching.\n\nI want to search \"func(\" and not get a bunch of results for plain \"func\"."}, {"id": "1355671686872354817", "author_id": "16958725", "author_handle": "choongng", "created_at": 1612073891.0, "favorite_count": 6, "full_text": "@JnBrymn @rakyll Add search for definition or first assignment. In general: Use include/import structure as an input to relevance. Use commit messages as an input to relevance (for lines changed)."}, {"id": "1355671675539349506", "author_id": "384664115", "author_handle": "gsderp", "created_at": 1612073889.0, "favorite_count": 0, "full_text": "@JnBrymn A few times a year I lament the inability to do a \u201cgit log -S\u201d equivalent without cloning the repo."}, {"id": "1355670811336564738", "author_id": "2725273267", "author_handle": "alth0u", "created_at": 1612073683.0, "favorite_count": 1, "full_text": "@JnBrymn be able to search forks"}, {"id": "1355670534231633920", "author_id": "51690654", "author_handle": "sudo_f", "created_at": 1612073617.0, "favorite_count": 0, "full_text": "@JnBrymn \u201eSearch by filename extension\u201c requires too much scrolling down"}, {"id": "1355670375665782787", "author_id": "45473548", "author_handle": "basharatw", "created_at": 1612073579.0, "favorite_count": 0, "full_text": "@JnBrymn Exact string match search \ud83d\udd26!"}, {"id": "1355670358880264192", "author_id": "18676154", "author_handle": "theshawwn", "created_at": 1612073575.0, "favorite_count": 11, "full_text": "@JnBrymn More results per page, please! And make it easier to search one specific repository. I never want to search globally."}, {"id": "1355670343030099969", "author_id": "17609423", "author_handle": "timkevinoxley", "created_at": 1612073571.0, "favorite_count": 3, "full_text": "@JnBrymn Code search that allows literal strings. Please."}, {"id": "1355670143263715329", "author_id": "33493", "author_handle": "peterc", "created_at": 1612073523.0, "favorite_count": 3, "full_text": "@JnBrymn If this includes repo search generally, being able to search for releases or sort by release date rather than just commit push times or \"activity\"."}, {"id": "1355669924962832386", "author_id": "948609064484864006", "author_handle": "laurieontech", "created_at": 1612073471.0, "favorite_count": 85, "full_text": "@JnBrymn @rakyll Projects using specific libraries/dependencies"}, {"id": "1355669853428965376", "author_id": "1188528286915354624", "author_handle": "naseemkullah", "created_at": 1612073454.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll Special characters in particular /"}, {"id": "1355669805114793989", "author_id": "14771839", "author_handle": "neal_lathia", "created_at": 1612073443.0, "favorite_count": 2, "full_text": "@JnBrymn I\u2019m often searching for examples of how my colleagues have solved something I currently need to do (as we share a huge monorepo); it\u2019s more of exploratory search than \u201cfind a specific thing\u201d search. So more diversity in the result set would be great"}, {"id": "1355669513312714754", "author_id": "14205968", "author_handle": "aprotim", "created_at": 1612073373.0, "favorite_count": 15, "full_text": "@JnBrymn - Regex search.\n- \"Punctuation\" treated as part of the search term.\n- Backreference/cross reference linking (not exactly search but falls  in the vicinity)"}, {"id": "1355669258047373313", "author_id": "16187717", "author_handle": "pythomit", "created_at": 1612073312.0, "favorite_count": 4, "full_text": "@JnBrymn @rakyll I\u2019d love to be able to search via the web with regex or even some type of more semantic search (eg: repos in which a coccinelle patch might apply)"}, {"id": "1355669242369224704", "author_id": "219671188", "author_handle": "hackerrdave", "created_at": 1612073309.0, "favorite_count": 0, "full_text": "@JnBrymn exclude archived repos by default"}, {"id": "1355669145770217476", "author_id": "2835546615", "author_handle": "victor_m_leite", "created_at": 1612073286.0, "favorite_count": 0, "full_text": "@JnBrymn @rakyll Boolean query strings like (\"Text-*\" OR \"texts-*\") AND (\"Something %\")"}, {"id": "1355668998591893504", "author_id": "17332378", "author_handle": "evilbilly", "created_at": 1612073251.0, "favorite_count": 2, "full_text": "@JnBrymn @rakyll Idea: When searching within a repo, provide a tree of search results by file path. I often find myself following usages and code flow, and being able to flick back/forth to the right file instead of result page would make this 1000x easier"}, {"id": "1355668917646221316", "author_id": "2603440875", "author_handle": "grahamcox82", "created_at": 1612073231.0, "favorite_count": 10, "full_text": "@JnBrymn @rakyll Finding repos that contain files with specific filenames. And then being able to sort that list to get the ones with the most stars or most activity.\n\nThat way, I can find major projects using particular technologies that I'm trying to learn to see how they've done things."}, {"id": "1355668873299845125", "author_id": "262914828", "author_handle": "sethvargo", "created_at": 1612073221.0, "favorite_count": 27, "full_text": "@JnBrymn @rakyll I\u2019d recommend looking back through old support tickets that were closed with no resolution (e.g. 860216). There\u2019s a ton of useful feedback on search that doesn\u2019t seem to be making it to your team for whatever reason, some of which were confirmed bugs by support reps :)"}, {"id": "1355668730362081290", "author_id": "15534230", "author_handle": "lintzston", "created_at": 1612073187.0, "favorite_count": 3, "full_text": "@JnBrymn being able to exclude archived repos from the search"}, {"id": "1355668665719377925", "author_id": "2189918276", "author_handle": "JackRNewhouse", "created_at": 1612073171.0, "favorite_count": 1, "full_text": "@JnBrymn @rakyll search for just the definition of a class or function, not its usages."}, {"id": "1355668581086883843", "author_id": "2843581078", "author_handle": "fuolpit", "created_at": 1612073151.0, "favorite_count": 3, "full_text": "@JnBrymn @rakyll Search across branches"}, {"id": "1355668444201549825", "author_id": "66351897", "author_handle": "alexwlchan", "created_at": 1612073118.0, "favorite_count": 53, "full_text": "@JnBrymn @rakyll De-duplicate results. I\u2019m often searching for uses of a particular API to get examples I can copy, and seeing the same file repeated across dozens of repos isn\u2018t helpful.\n\nI did a brief demo of this idea a while back: https://t.co/OWEBHSfMM6"}, {"id": "1355668257181749252", "author_id": "141014288", "author_handle": "xLaszlo", "created_at": 1612073074.0, "favorite_count": 0, "full_text": "@JnBrymn @peteskomoroch logical operators, wildcards, double quote to query for exact match, search by filetype, filename (wildcards again)"}, {"id": "1355667755316330497", "author_id": "14242083", "author_handle": "Back2Basics", "created_at": 1612072954.0, "favorite_count": 5, "full_text": "@JnBrymn @peteskomoroch We need warning labels on searches.    \u201cYou were searching for python files with a triple equals (===), a dark foot path lies before you laden with floor LEGO\u2019s."}, {"id": "1355667572520194051", "author_id": "717077528024911873", "author_handle": "BunkyFob", "created_at": 1612072911.0, "favorite_count": 3, "full_text": "@JnBrymn Punctuation is meaningful!\n\nIf I search for \"doFoo(\" it really is significantly different to \"doFoo\"."}, {"id": "1355666680626651143", "author_id": "606342610", "author_handle": "mattgcondon", "created_at": 1612072698.0, "favorite_count": 63, "full_text": "@JnBrymn @chrismessina please please please allow exact string matches, including coding punctuation. i want to be able to do basic case insensitive beep searching without having to clone a repo"}, {"id": "1355666316061884416", "author_id": "20828908", "author_handle": "odwyerrob", "created_at": 1612072611.0, "favorite_count": 0, "full_text": "@JnBrymn An option to show all matches in each file instead of just one would be great. I often use it to quickly check for references to a value across many repos, and the non-semantic search means I really need to scan through them!"}, {"id": "1355666253071998983", "author_id": "21390942", "author_handle": "jamesuriah", "created_at": 1612072596.0, "favorite_count": 36, "full_text": "@JnBrymn Collapsing forks on CS. When I\u2019m searching for use of an obscure API or a pattern, it would very helpful to reduce the noise. I see so so so many results that are the same &amp; just forks of popular repos. Would be nice to see \u201cresult 1 (with 453 forks)\u201d rather than pages and pages."}, {"id": "1355666076609220614", "author_id": "15359501", "author_handle": "wadetandy", "created_at": 1612072554.0, "favorite_count": 1, "full_text": "@JnBrymn I want search to be a web interface over \u201cgit grep\u201d. Especially if I\u2019m searching a single repo."}, {"id": "1355665805719916545", "author_id": "1036545223155798017", "author_handle": "BrettJohnston_", "created_at": 1612072489.0, "favorite_count": 0, "full_text": "@JnBrymn @chrismessina Look at how code search engines work. I've resorted to using them when other engines can't grasp the query."}, {"id": "1355663424462663681", "author_id": "1182733604918628352", "author_handle": "kr_scheff", "created_at": 1612071922.0, "favorite_count": 1, "full_text": "@JnBrymn @whalehaventv"}, {"id": "1355662968625750023", "author_id": "26087075", "author_handle": "dfalbel", "created_at": 1612071813.0, "favorite_count": 61, "full_text": "@JnBrymn don't ignore special characters like '&lt;-' and '(' in the search query"}, {"id": "1355662701205151753", "author_id": "2567686548", "author_handle": "michael_chirico", "created_at": 1612071749.0, "favorite_count": 7, "full_text": "@JnBrymn regex search"}, {"id": "1355662389165715456", "author_id": "4800875312", "author_handle": "NathanielSaul", "created_at": 1612071675.0, "favorite_count": 4, "full_text": "@JnBrymn @peteskomoroch Not turning everything in the search query into white space. If I remember correctly, quoting terms for exact match isn\u2019t respected. Also, I\u2019d love to be able to exclude comments and docs from the results."}, {"id": "1355662327698182146", "author_id": "633793", "author_handle": "NeilKNet", "created_at": 1612071660.0, "favorite_count": 2, "full_text": "@JnBrymn Maybe this isn't search, but often I would like to navigate another organization's codebase on Github as easily as my local code in an IDE. For instance, a full text search for \"foo\" could have definition ranked above uses, then I would like to jump from definitions to uses."}, {"id": "1355661065640505347", "author_id": "66319826", "author_handle": "tedivm", "created_at": 1612071359.0, "favorite_count": 1, "full_text": "@JnBrymn Linking to the main branch (or even \"a branch\") rather than \"blob/sha\"."}, {"id": "1355660540077596672", "author_id": "2413997304", "author_handle": "sean_r_owen", "created_at": 1612071234.0, "favorite_count": 10, "full_text": "@JnBrymn For me it's the relevance ranking. An exact match of file name should be a top result. If it's a class name, the declaration is almost always what I want, and likewise with methods. Usages are almost never what I need."}, {"id": "1355660490710519809", "author_id": "12497", "author_handle": "simonw", "created_at": 1612071222.0, "favorite_count": 60, "full_text": "@JnBrymn Facet by repository, file name and containing directory. I often search for something across all my repos, facet counts by individual repo would be great!"}, {"id": "1355659736780333057", "author_id": "287779473", "author_handle": "TylerJBurch", "created_at": 1612071042.0, "favorite_count": 0, "full_text": "@JnBrymn @nickwan Probably there\u2019s a way I\u2019m not aware of, but a way to filter out forked code or results with &gt;95% overlap would be useful."}, {"id": "1355659396416729088", "author_id": "1687116019", "author_handle": "_jameslamb", "created_at": 1612070961.0, "favorite_count": 38, "full_text": "@JnBrymn @EmilyRiederer I would love to be able to search / filter on file names. e.g. \"only apply this search to files named CMakeLists.txt\""}, {"id": "1355659223569477635", "author_id": "23621187", "author_handle": "schneems", "created_at": 1612070920.0, "favorite_count": 237, "full_text": "@JnBrymn I often want to search for a literal like\n\n\u201cfoo(\u201c \n\nBut this matches \u201cfoo\u201d without the parens."}, {"id": "1355658276541616129", "author_id": "374420755", "author_handle": "ellis_hughes", "created_at": 1612070694.0, "favorite_count": 8, "full_text": "@JnBrymn @MeganRisdal Function assignment vs use in our repository. Finding where i (or another person) defined a function is a pain!"}, {"id": "1355658117263065089", "author_id": "29170474", "author_handle": "Sirupsen", "created_at": 1612070656.0, "favorite_count": 20, "full_text": "@JnBrymn For it to be really useful to me, the UX needs to completely change to be fast and responsive. Make it more like searching for files in repos (shortcut T). Not a big \"type a string, wait a while, see some snippets.\"\n\nThat's why I don't use it. I clone down repos and use fzf + rg."}, {"id": "1355657575019081729", "author_id": "267256091", "author_handle": "_inundata", "created_at": 1612070527.0, "favorite_count": 10, "full_text": "@JnBrymn I\u2019m working on a project about software metrics and one big challenge with discovering software use is the GitHub code search limitations. I\u2019d love to chat more with you. \nSome context: https://t.co/HPebWXybHZ"}]
